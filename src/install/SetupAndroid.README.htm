<html>
<head><title>SAFS Android Setup</title></head>
<body>
<a name="top" />
<center><h1>
SAFS Android Setup<br>
for Windows</h1>
Updated 2015.10.15</center>
<hr>
<b>Authors:</b>
<ul>
Carl Nagle
</ul>
<p>
<b>Copyright (C) SAS Institute</b><br>
<a href="http://www.opensource.org/licenses/gpl-license.php" target="reference">General Public License</a>: http://www.opensource.org/licenses/gpl-license.php
<hr>
<a href="#definitions">Definitions</a>,&#032;
<a href="#reminders">Critical Reminders</a>,&#032;
<a href="#instructions">Setup Instructions</a>,&#032;
<a href="#setupnotes">Test It</a>&#032;
<a name="definitions" />
<p>
<h3><b>Definitions:</b><br/></h3>
<table border=0 cellspacing=7 >
<tr><td><b>
SAFS</b><td><b><a href="http://safsdev.sourceforge.net" target=_blank title="SAFSDEV Home Page" >
Software Automation Framework Support</a></b>
</td>
<tr><td><b>Device</b><td>The actual Android device to be used for testing.<br>
<u>An Emulator is also considered a device.</u>
<tr><td><b>On-Device</b><td><u>Code or applications on the device targetted for testing.</u>
<tr><td><b>AUT</b><td><u>App Under Test--the on-device <b>target APK</b> to be tested.</u>
<tr><td><b>Messenger</b><td><u>The on-device <b>SAFS TCP Messenger APK</b> for Android testing.</u>
<tr><td><b>TestRunner</b><td><u>The on-device <b>SAFS Test Runner APK</b> for SAFS Android Remote Control testing.</u>
<tr><td><b>Controller</b><td>The computer used to remotely control the test on the device.<br>
For simplicity, the test development machine and the Controller are assumed to be the same.<br>
<u>For SAFS, the SAFS Android Engine is considered the Controller.</u>
<tr><td><b>The Test</b><td>The SAFS keyword-driven tests or <a href="http://safsdev.sourceforge.net/sqabasic2000/UsingJSAFS.htm" title="Java API for SAFS Tests" target="_blank">JSAFS</a> tests developed for execution by SAFS.<br>
More native SAFS/Robotium Remote Control tests are also possible.
</table>

<hr/><! ======================================================================>
<a name="reminders" />
<small><a href="#definitions">Definitions</a>,&#032;
<a href="#instructions">Setup Instructions</a>,&#032;
<a href="#setupnotes">Test It</a>&#032;
</small>
<p>
<h3><b>Critical Reminders:</b><br/></h3>
<p>
<ol>
<li>The <b>Messenger</b> is a general-purpose SAFS TCP Communication service on Android.
&nbsp;It allows us to provide remote control capabilities over TCP even for AUTs and TestRunners
that DO NOT have the required INTERNET permissions necessary for TCP communications.
&nbsp;This service is required (and provided) for Robotium Remote Control and SAFS Android Remote Control even for AUTs that might already have INTERNET permissions.
<p>
<li>The <b>TestRunner</b> is a general-purpose InstrumentationTestRunner created specifically for SAFS Android Remote Control. &nbsp;Because the actual AUT-specific tests are on the remote Controller and NOT in the TestRunner, the TestRunner can be resigned and repackaged for testing any number of AUTs without modifying its internal code. &nbsp;The TestRunner receives its remote command and control data and reports its success, failure, and results data through the Messenger service.
<p>
</ol>
<p>


<hr/><! ======================================================================>
<a name="instructions" />
<small><a href="#definitions">Definitions</a>,&#032;
<a href="#reminders">Critical Reminders</a>,&#032;
<a href="#setupnotes">Test It</a>&#032;
</small>
<p>
<h3><b>Setup Instructions:</b><br/></h3>
<p>
SAFS Android Remote Control support and execution has the same system requirements as those required for developing standard native Android tests. &nbsp;That means a Java SDK, the Android SDK, and Ant are still required. &nbsp;Ideally, these should be installed prior to installing SAFS.

<p><ol>
<li><b>Verify (<a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" title="Java JDK Home Page">Install if needed</a>) a Java JDK (not a JRE)</b>:<br>
The Java SDK should be version 1.7 or higher.<br>
<p>
<b>*</b> The System environment variable <b>JAVA_HOME</b> should be set to the path to the Java SDK.<br>
<b>*</b> The System environment variable <b>PATH</b> should contain the path to the Java SDK '<b>bin</b>' subfolder.


<p>
<li><b>Verify (<a href="http://developer.android.com/sdk/index.html" target="_blank" title="Android SDK Home Page">Install if needed</a>) the Android SDK</b>:<br>
Minimally we need the Stand-alone SDK Tools.  The entire Android Studio suite (Developer tools and IDE) is not required.<br>
The recommended *minimum* Android API Level should be Revision 15.<br>
<p>
<b>*</b> The System environment variable <b>ANDROID_HOME</b> should be set to the path to the Android SDK.<br>
<b>*</b> The System environment variable <b>PATH</b> should contain the paths to both the Android SDK's '<b>tools</b>' and '<b>platform-tools</b>' subfolders.
<p>
NOTE:
<ul>To test on an <b>Android Emulator</b>, you must verify/prepare an appropriate 'AVD' with the '<b>android</b>' tool provided with the Android SDK. &nbsp;Refer to the Android Developers documentation for details.
<p>
To test on a real device, you must verify/prepare any required connections and/or drivers for your device. &nbsp;Refer to the Android Developers documentation for details.
</ul>


<p>
<li><b>Verify (<a href="http://ant.apache.org/" target="_blank" title="Apache Ant Home Page">Install if needed</a>) Apache Ant</b>:<br>
Ant should be version 1.8 or higher.<br>
<p>
<b>*</b> The System environment variable <b>ANT_HOME</b> should be set to the path to the Ant SDK.<br>
<b>*</b> The System environment variable <b>PATH</b> should contain the path to the Ant SDK's '<b>bin</b>' subfolder.


<p>
<li><b>Rebuild SAFSTCPMessenger-debug.apk</b>:<br>
Required only once to build with your tester/developer debug profile.
<p>
<ul>
<li>Go to the <b>samples\Droid\SAFSTCPMessenger</b> project and verify/edit the file <b>local.properties</b>:
<p><ul>
<b>sdk.dir</b>=&lt;path-to-android-sdk><br>
<b>safs.droid.automation.libs</b>=&lt;path-to\samples\Droid\SAFSTestRunner\libs>
</ul>
<p>
<li>In a CMD/Shell/Terminal window navigate to the <b>samples\Droid\SAFSTCPMessenger</b> project directory.
<li>Execute '<b>build.bat</b>' to build the <b>SAFSTCPMessenger-debug.apk</b>.
<li>Verify the APK was built in the <b>SAFSTCPMessenger</b> '<b>bin</b>' subfolder.
</ul>


<p>
<li><b>Rebuild SAFSTestRunner-debug.apk</b>:<br>
Required only once to build with your tester/developer debug profile.<br>
<p>
<ul>
<li>Go to the <b>samples\Droid\SAFSTestRunner</b> project and verify/edit the file <b>local.properties</b>:
<p><ul>
<b>sdk.dir</b>=&lt;path-to-android-sdk><br>
</ul>
<p>
<li>For a one-time TestRunner build, edit the SAFSTestRunner <b>AndroidManifest.xml</b> file:<br>
Within the '<b>&lt;instrumentation </b>' element set the '<b>android:targetPackage</b>' attribute to match the package of the AUT you will be testing:
<p><ul>android:targetPackage="com.android.example.spinner"</ul>
<p>
(As an advanced feature, the framework can rebuild the SAFSTestRunner at runtime to match the targetPackage of whatever AUT is specified for testing.)
<p>
<li>In a CMD/Shell/Terminal window navigate to the <b>samples\Droid\SAFSTestRunner</b> project directory.
<li>Execute '<b>build.bat</b>' to build the <b>SAFSTestRunner-debug.apk</b>.
<li>Verify the APK was built in the <b>SAFSTestRunner</b> '<b>bin</b>' subfolder.
</ul>


<p>
<li><b>This next step is only required to build and test the sample SpinnerActivity App.</b>
<p>
<b>Rebuild Sample SpinnerActivity-debug.apk</b>:<br>
Required only once to build with your tester/developer debug profile.<br>
<p>
<ul>
<li>Go to the <b>samples\Droid\SpinnerSample</b> project and verify/edit the file <b>local.properties</b>:
<p><ul>
<b>sdk.dir</b>=&lt;path-to-android-sdk><br>
</ul>
<p>
<li>In a CMD/Shell/Terminal window navigate to the <b>samples\Droid\SpinnerSample</b> project directory.
<li>Execute '<b>build.bat</b>' to build the <b>SpinnerActivity-debug.apk</b>.
<li>Verify the APK was built in the <b>SpinnerSample</b> '<b>bin</b>' subfolder.
</ul>

<p>
</ol>

<hr/><! ======================================================================>
<a name="setupnotes" />
<small><a href="#definitions">Definitions</a>,&#032;
<a href="#reminders">Critical Reminders</a>,&#032;
<a href="#instructions">Setup Instructions</a>&#032;
</small>
<p>
<h3><b>Test It:</b><br/></h3>
<p>
Once you have successfully completed the Setup Instructions above, you should be ready to test/verify that SAFS Android support is working.
<p>
The SAFS Droid sample comes with a ready-to-run test for the SpinnerSample provided by SAFS. &nbsp;As mentioned in <a href="#definitions">Definitions</a> and the Setup Instructions above, you must have a valid emulator AVD or a real Device working properly with your Android SDK.
<p>
<ol>
<li>Navigate to and verify/edit <b>samples\Droid\droidTest.ini</b>.<br>
(Consult the <a href="http://safsdev.sourceforge.net/sqabasic2000/JSAFSFrameworkContent.htm#configfile" title="Configuration File Options" target="_blank">Configuration File Options<a> to list all available INI options for [SAFS_DROID].)
<p>
<ul>
    <li>Edit/Verify paths in the INI file:
    <p><ol>
    <li>DriverRoot
    <li>ProjectRoot
    <li>DroidProject
    <li>Android-SDK
    <li>Android-Tools
    <li>TestRunnerAPK
    <li>TCPMessengerAPK
    <li>TargetAPK
    </ol>
    <p>
    <li>Edit/Verify the <b>EMULATOR_AVD</b> setting if using an AVD.
    <p>
</ul>
<p>
<li>Verify your Device is connected and properly configured for Development/Debugging.
<p>
<li>If you have used Robotium Remote Control or SAFS Android support before, you should make sure you have deleted any TestRunner, Messenger, and AUT APKs previously installed on the Device. &nbsp;This is especially true if you are using different SDKs on different machines (Mac, Windows, etc.) as your debug profile/certificates are different with different SDK installs.
<p>
<li>You should now be ready to navigate to and execute <b>samples\Droid\runDroidTest.bat</b>.
<p>
<ul>
<li>Using an AVD will be painfully slow as the AVD takes a long time to bootstrap. &nbsp;Using a real device will prove much faster!
<li>The first indication of activity on the Device will be a short note in the Device notification bar that the SAFS Messenger Service has been activated.
<li>Shortly thereafter you should see the SpinnerActivity application launched on the Device.
<li>The brief test will then shutdown the SpinnerActivity application and exit the test.
</ul>
<p>
<li>You should be able to review the test results at <b>samples\Droid\Logs\DroidTestCycle.txt</b>.
</ol>
<p>
Consult the <a href="http://safsdev.sourceforge.net/sqabasic2000/SAFSReference.php" title="SAFS Keyword Reference" target="_blank">SAFS Keyword Reference</a> for specific <img src="http://safsdev.sourceforge.net/sqabasic2000/DRD.GIF" alt="Droid Support Icon" title="Droid Support Icon"> Android (DRD) support currently available in SAFS.
<p>
Specifically:
<p>
<ul>
<a href="http://safsdev.sourceforge.net/sqabasic2000/AndroidEngineComponentCommandsIndex.htm" target="_index" title="Android Engine Commands Index">Engine Commands List</a><br>
<a href="http://safsdev.sourceforge.net/sqabasic2000/DRDDriverCommandsList.htm" target="_index" title="Android Driver Commands List">Driver Commands List</a><br>
<a href="http://safsdev.sourceforge.net/sqabasic2000/DRDComponentFunctionsList.htm" target="_index" title="Android Component Functions List">Component Functions List</a>
</ul>
<p>
Enjoy!
<hr>
<pre>Carl Nagle, <a href="http://www.sas.com"  >SAS Institute</a>
Project Manager, <a href="https://github.com/safsdev"  >SAFSDEV</a>
Subscribe to appropriate <a href="http://safsdev.freeforums.net" alt="Go to Support Forums">Support Forums</a> to review support archives and ask questons.
</pre>
<p>
</body></html>