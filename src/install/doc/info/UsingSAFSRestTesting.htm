<html>
<head>
<title>Using SAFS REST Testing API</title>
<style>
.cap {
    font-size: 24px;
    font-weight: bold;
}
table, td {
    border: 1px solid black;
}
</style>
</head>

<body lang=EN-US>
<center><H1>Using SAFS REST Testing API</H1></center>
<p>
<hr>
Author: Carl Nagle<br/>
Update: Sep 06, 2016 CANAGL
<p>
Copyright, SAS Institute
<a href="http://www.sas.com" target="altwin">http://www.sas.com</a><br/>
<a href="http://www.opensource.org/licenses/gpl-license.php" target="altwin">General Public License (GPL)</a>:&nbsp;
http://www.opensource.org/licenses/gpl-license.php<br/>
<hr>
<ol>
	<li><span class="cap">The SAFS REST Testing API</span>

		<p>
		Refer to the <a href="http://safsdev.sourceforge.net/doc/org/safs/rest/REST.html" target="_blank" title="SAFS REST JavaDoc">SAFS REST JavaDoc</a> as part of this discussion for using this API.
		<p>
		This framework is intended to streamline REST API testing code so that more is written by the tester that actually tests and verifies the target REST API rather than preparing, making, and evaluating the calls to that target REST API.
		<p>
		The testing framework supports user-defined <a href="http://safsdev.sourceforge.net/doc/org/safs/rest/REST.html#StartServiceSession(java.lang.String,%20java.lang.String)" target="_blank" title="REST StartServiceSession">service "sessions"</a> intended to persist important information for a REST service for reuse.  This allows the tester to focus on the specifics of individual calls to that service.

	<li><span class="cap">Defining External, Multi-Line Headers in Java Properties files</span>

		<p>
		In order to maximize reuse and reduce the code necessary to make a proper REST API call, we promote the concept of maintaining critical multi-line Header Strings in external <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Properties.html" target="_blank">Java Properties</a> files.
		<p>
		To take advantage of this for HTTP Headers, examples of the syntax for multi-line headers are shown below:
		<p>
		<pre>
    <b>SampleHeaders</b>: Retry-After: Fri, 31 Dec 1999 23:59:59 GMT       <b>\r\n\</b>
                   Some-Header: Some more spaces that are unquoted  <b>\r\n\</b>
                   Last-Modified: Tue, 15 Nov 1994 12:45:26 GMT

    <b>MyJSONHeaders</b>: Content-Type: application/myClass+json   <b>\r\n\</b>
                   Content-Length: 0                        <b>\r\n\</b>
                   Accept: application/myClass+json</pre>
		<p>
		We are showing the line continuation as " <b>\r\n\</b> "  because the HTTP spec shows that CRLF ( <b>\r\n</b> ) is required to terminate a header and using either  ‘ \r ’  or  ‘ \n ’  by themselves may not be considered an appropriate line ending.  Then the final ‘ <b>\</b> ’ is the Java Properties line continuation character that must be followed by the real CRLF line-ending terminator.

	<li><span class="cap">Storing Custom Headers for Repeated Use</span>

		<p>
		We recommend basing the Properties filename on the serviceId of the Service being tested.
		<ul>
		<table>
		    <th>ServiceId<th>Properties File
		    <tr><td>Google<td>GoogleHeaders.properties
		    <tr><td>MyService<td>MyServiceHeaders.properties
	    </table>
	    </ul>
	    <p>
		<b>(PROPOSAL)</b>
		<p>
		When the Properties filename is based on the serviceId, and the Properties file is findable in the runtime CLASSPATH, then the framework will automatically locate and load the header types defined in the Properties file during the call to <a href="http://safsdev.sourceforge.net/doc/org/safs/rest/REST.html#StartServiceSession(java.lang.String,%20java.lang.String)" target="_blank">REST.StartServiceSession</a>.
		<p>
		By default, the automatic loading of Service default and/or custom header types in your Headers Properties file will invoke <a href="http://safsdev.sourceforge.net/doc/org/safs/rest/service/Headers.html#setHeadersForType(java.lang.String,%20java.lang.String)" target="_blank">Headers.setHeadersForType</a> for each name=value pair found in the Headers Properties file.
		<p>
		If for any reason we cannot automatically find or load this default Properties file, the tester will need to load the Properties and call the appropriate Headers class methods for the types of Headers they wish to use.

	<li><span class="cap">Opening and Closing Server "Sessions"</span>

		<p>
		<b><a href="http://safsdev.sourceforge.net/doc/org/safs/rest/REST.html#StartServiceSession(java.lang.String,%20java.lang.String)" target="_blank">REST.StartServiceSession</a></b> must be called prior to any attempts to use the testing framework to test a specific REST Service.  The call prepares the system for finding the specific Service for each subsequent REST.GET, PUT, POST, etc. without the tester having to explicitly specify full path URIs (domains and ports) for every call to the Service.  It also allows the system to automatically configure test framework internals for things like custom Content-Type and Accept headers that are specific to the Service being tested.
		<p>
		The user-defined "serviceId" is used to uniquely identify the Service to be tested.  It will also be used to automatically seek and load associated resources--like Header Properties files containing Service-specific headers and other info, if available.
		<p>
		<b><a href="http://safsdev.sourceforge.net/doc/org/safs/rest/REST.html#EndServiceSession(java.lang.String)" target="_blank">REST.EndServiceSession</a></b> should be called to release any assets or resources associated with testing the Service once testing for the associated Service has been completed.

	<li><span class="cap">Making Simple Calls for Predefined Accept: Content Types</span>

		<p>

	<li><span class="cap">Making Custom Calls using Complex Headers</span>

		<p>

</ol>
</body>

</html>
