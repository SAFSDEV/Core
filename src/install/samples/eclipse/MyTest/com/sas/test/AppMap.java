/**
 * Copyright (C) SAS Institute, All rights reserved.
 * General Public License: https://www.gnu.org/licenses/gpl-3.0.en.html
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
**/
package com.sas.test;
import org.safs.model.Component;
import org.safs.model.tools.RuntimeDataAware;
import org.safs.tools.RuntimeDataInterface;

/** *** DO NOT EDIT THIS FILE ***<br>
    THIS FILE IS GENERATED AUTOMATICALLY by org.safs.model.tools.ComponentGenerator!<br><p>
    A JSAFS AppMap reference for SAFS App Map: './Datapool/App.map' */
public final class AppMap implements RuntimeDataAware {

    private static RuntimeDataInterface dataInterface = null;

    /** Called internally as part of the bootstrap process of Dependency Injection. */
    public void setRuntimeDataInterface(RuntimeDataInterface helper){
        dataInterface = helper;
    }

    // The Names of ApplicationConstants:

    /** "CalculatorApp" */
    public static final String CalculatorApp = "CalculatorApp";

    /** The resolved runtime value of constant 'CalculatorApp', or null. */
    public static String CalculatorApp(){
        try{ return dataInterface.getVariable("CalculatorApp"); }
        catch(Exception x){ return null; }
    }

    /** "CalcEXE" */
    public static final String CalcEXE = "CalcEXE";

    /** The resolved runtime value of constant 'CalcEXE', or null. */
    public static String CalcEXE(){
        try{ return dataInterface.getVariable("CalcEXE"); }
        catch(Exception x){ return null; }
    }

    /** "AutoItTestMap" */
    public static final String AutoItTestMap = "AutoItTestMap";

    /** The resolved runtime value of constant 'AutoItTestMap', or null. */
    public static String AutoItTestMap(){
        try{ return dataInterface.getVariable("AutoItTestMap"); }
        catch(Exception x){ return null; }
    }

    // The Names of Window and Child Component objects: 

    /** "Calculator" Component and its children. */
    public static class Calculator {

        // No use for a default constructor.
        private Calculator(){}

        /** "Calculator" Window Component itself. */
        public static final Component Calculator = new Component("Calculator");
    }

    /** "SAFS Monitor" Component and its children. */
    public static class SAFS_Monitor {

        // No use for a default constructor.
        private SAFS_Monitor(){}

        /** "SAFS Monitor" Window Component itself. */
        public static final Component SAFS_Monitor = new Component("SAFS Monitor");
    }

    /** "ApplicationConstants" Component and its children. */
    public static class ApplicationConstants {

        // No use for a default constructor.
        private ApplicationConstants(){}

        /** "ApplicationConstants" Window Component itself. */
        public static final Component ApplicationConstants = new Component("ApplicationConstants");

        /** "CalculatorApp" Component in "ApplicationConstants". */
        public static final Component CalculatorApp = new Component(ApplicationConstants, "CalculatorApp");

        /** "CalcEXE" Component in "ApplicationConstants". */
        public static final Component CalcEXE = new Component(ApplicationConstants, "CalcEXE");

        /** "AutoItTestMap" Component in "ApplicationConstants". */
        public static final Component AutoItTestMap = new Component(ApplicationConstants, "AutoItTestMap");
    }
}
