
/******************************************************************************
 * ProgressBar.java
 *
 * Copyright (c) by SAS Institute Inc., Cary, NC 27513
 * General Public License: http://www.opensource.org/licenses/gpl-license.php
 *
 * !!! DO NOT EDIT THIS FILE !!!
 * This file is automatically generated from XML source.  Any changes you make 
 * here will be erased the next time the file is generated.
 *
 * The following assets are needed to generate this file:
 *
 *   ProgressBarFunctions.xml
 *   keyword_library.dtd
 *   XSLJavaCommonFunctions.xsl
 *   XSLJavaComponentModel.xsl
 *
 * Example invocation to generate:
 *
 *   msxsl.exe ProgressBarFunctions.xml XSLJavaComponentModel.xsl -o ProgressBar.java
 *
 ******************************************************************************/ 
package org.safs.model.components;

import org.safs.model.commands.ProgressBarFunctions;
import org.safs.model.ComponentFunction;
import org.safs.model.components.UIComponent;
import org.safs.model.StepTestTable;

public class ProgressBar extends GenericObject {

    /*****************
    Constructor 

    Create an instance of pseudo-component representing 
    a specific component in a specific window.
    
    @param window  Optional:NO 
           Specifies which Window this component is 'in'.
    @param compname Optional:NO 
           Specifies the AppMap name of the component in the Window.
    ****************/
    public ProgressBar(Window window, String compname) {

        super(window, compname);
    }

    /*****************
    Constructor 

    Create an instance of pseudo-component representing 
    a specific component in a specific window.
    
    This convenience routine will create the requisite Window component.
    
    @param winname  Optional:NO 
           Specifies the AppMap name of the window.
    @param compname Optional:NO 
           Specifies the AppMap name of the component in the Window.
    ****************/
    public ProgressBar(String winname, String compname) {

        this(new Window(winname), compname);
    }

    protected ProgressBar(String compname) {

        super(compname);
    }



    /*********** <pre> 
                 Action to get progress of a progress bar component.
                  </pre>    Supporting Engines:
    <P/><UL>
    <LI>Google Android</LI>
    </UL>

     @param variableName  Optional:NO 
                 The variable VariableName will contain the progress of progress bar in percentage.
              
     @param isPrimary  Optional:YES 
                 IsPrimary is boolean value (default is true). It indicates which indicator to get.
              
     **********/
    public ComponentFunction getProgress(String variableName, String isPrimary ) {

        if ( variableName == null ) throw new IllegalArgumentException ( "getProgress.variableName = null");
        return ProgressBarFunctions.getProgress(getWindow().getName(), getName(), variableName, isPrimary);
    }

    /*********** <pre> 
                 Action to get progress of a progress bar component.
                  </pre>    Supporting Engines:
    <P/><UL>
    <LI>Google Android</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param variableName  Optional:NO 
                 The variable VariableName will contain the progress of progress bar in percentage.
              
     @param isPrimary  Optional:YES 
                 IsPrimary is boolean value (default is true). It indicates which indicator to get.
              
     **********/
    public void getProgress(StepTestTable table, String variableName, String isPrimary ) {

        if ( table == null ) throw new IllegalArgumentException ( "getProgress.table = null");

        if ( variableName == null ) throw new IllegalArgumentException ( "getProgress.variableName = null");
        table.add( ProgressBarFunctions.getProgress(getWindow().getName(), getName(), variableName, isPrimary));
    }

    /*********** <pre> 
                 Action to get progress of a progress bar component.
                  </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>Google Android</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         variableName -- Optional:NO 
                 The variable VariableName will contain the progress of progress bar in percentage.
              <BR/>         isPrimary -- Optional:YES 
                 IsPrimary is boolean value (default is true). It indicates which indicator to get.
              
    </UL>

     **********/
    public ComponentFunction getProgress(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "getProgress.parameters = null");
        return ProgressBarFunctions.getProgress(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre> 
                 Action to get progress of a progress bar component.
                  </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>Google Android</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         variableName -- Optional:NO 
                 The variable VariableName will contain the progress of progress bar in percentage.
              <BR/>         isPrimary -- Optional:YES 
                 IsPrimary is boolean value (default is true). It indicates which indicator to get.
              
    </UL>

     **********/
    public void getProgress(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "getProgress.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "getProgress.parameters = null");
        table.add( ProgressBarFunctions.getProgress(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre> 
                 Action to get rating of a rating bar component.
                 Note:  Work ONLY for android.widget.RatingBar object.
                  </pre>    Supporting Engines:
    <P/><UL>
    <LI>Google Android</LI>
    </UL>

     @param variableName  Optional:NO 
                 The variable VariableName will contain the rating of rating bar.
              
     **********/
    public ComponentFunction getRating(String variableName ) {

        if ( variableName == null ) throw new IllegalArgumentException ( "getRating.variableName = null");
        return ProgressBarFunctions.getRating(getWindow().getName(), getName(), variableName);
    }

    /*********** <pre> 
                 Action to get rating of a rating bar component.
                 Note:  Work ONLY for android.widget.RatingBar object.
                  </pre>    Supporting Engines:
    <P/><UL>
    <LI>Google Android</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param variableName  Optional:NO 
                 The variable VariableName will contain the rating of rating bar.
              
     **********/
    public void getRating(StepTestTable table, String variableName ) {

        if ( table == null ) throw new IllegalArgumentException ( "getRating.table = null");

        if ( variableName == null ) throw new IllegalArgumentException ( "getRating.variableName = null");
        table.add( ProgressBarFunctions.getRating(getWindow().getName(), getName(), variableName));
    }

    /*********** <pre> 
                 Action to set progress for a progress bar component according to its value.
                  </pre>    Supporting Engines:
    <P/><UL>
    <LI>Google Android</LI>
    </UL>

     @param progressValue  Optional:NO 
                 ProgressValue to set.
              
     @param isPrimary  Optional:YES 
                 IsPrimary is boolean value (default is true). It indicates which indicator to set.
              
     **********/
    public ComponentFunction setProgress(String progressValue, String isPrimary ) {

        if ( progressValue == null ) throw new IllegalArgumentException ( "setProgress.progressValue = null");
        return ProgressBarFunctions.setProgress(getWindow().getName(), getName(), progressValue, isPrimary);
    }

    /*********** <pre> 
                 Action to set progress for a progress bar component according to its value.
                  </pre>    Supporting Engines:
    <P/><UL>
    <LI>Google Android</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param progressValue  Optional:NO 
                 ProgressValue to set.
              
     @param isPrimary  Optional:YES 
                 IsPrimary is boolean value (default is true). It indicates which indicator to set.
              
     **********/
    public void setProgress(StepTestTable table, String progressValue, String isPrimary ) {

        if ( table == null ) throw new IllegalArgumentException ( "setProgress.table = null");

        if ( progressValue == null ) throw new IllegalArgumentException ( "setProgress.progressValue = null");
        table.add( ProgressBarFunctions.setProgress(getWindow().getName(), getName(), progressValue, isPrimary));
    }

    /*********** <pre> 
                 Action to set progress for a progress bar component according to its value.
                  </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>Google Android</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         progressValue -- Optional:NO 
                 ProgressValue to set.
              <BR/>         isPrimary -- Optional:YES 
                 IsPrimary is boolean value (default is true). It indicates which indicator to set.
              
    </UL>

     **********/
    public ComponentFunction setProgress(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "setProgress.parameters = null");
        return ProgressBarFunctions.setProgress(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre> 
                 Action to set progress for a progress bar component according to its value.
                  </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>Google Android</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         progressValue -- Optional:NO 
                 ProgressValue to set.
              <BR/>         isPrimary -- Optional:YES 
                 IsPrimary is boolean value (default is true). It indicates which indicator to set.
              
    </UL>

     **********/
    public void setProgress(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "setProgress.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "setProgress.parameters = null");
        table.add( ProgressBarFunctions.setProgress(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre> 
                 Action to set rating for a rating bar component according to its value.
                 Note:  Work ONLY for android.widget.RatingBar object.
                  </pre>    Supporting Engines:
    <P/><UL>
    <LI>Google Android</LI>
    </UL>

     @param ratingValue  Optional:NO 
                 RatingValue to set.
              
     **********/
    public ComponentFunction setRating(String ratingValue ) {

        if ( ratingValue == null ) throw new IllegalArgumentException ( "setRating.ratingValue = null");
        return ProgressBarFunctions.setRating(getWindow().getName(), getName(), ratingValue);
    }

    /*********** <pre> 
                 Action to set rating for a rating bar component according to its value.
                 Note:  Work ONLY for android.widget.RatingBar object.
                  </pre>    Supporting Engines:
    <P/><UL>
    <LI>Google Android</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param ratingValue  Optional:NO 
                 RatingValue to set.
              
     **********/
    public void setRating(StepTestTable table, String ratingValue ) {

        if ( table == null ) throw new IllegalArgumentException ( "setRating.table = null");

        if ( ratingValue == null ) throw new IllegalArgumentException ( "setRating.ratingValue = null");
        table.add( ProgressBarFunctions.setRating(getWindow().getName(), getName(), ratingValue));
    }

}
