
/******************************************************************************
 * FlexNumericStepper.java
 *
 * Copyright (c) by SAS Institute Inc., Cary, NC 27513
 * General Public License: http://www.opensource.org/licenses/gpl-license.php
 *
 * !!! DO NOT EDIT THIS FILE !!!
 * This file is automatically generated from XML source.  Any changes you make 
 * here will be erased the next time the file is generated.
 *
 * The following assets are needed to generate this file:
 *
 *   FlexNumericStepperFunctions.xml
 *   keyword_library.dtd
 *   XSLJavaCommonFunctions.xsl
 *   XSLJavaComponentModel.xsl
 *
 * Example invocation to generate:
 *
 *   msxsl.exe FlexNumericStepperFunctions.xml XSLJavaComponentModel.xsl -o FlexNumericStepper.java
 *
 ******************************************************************************/ 
package org.safs.model.components;

import org.safs.model.commands.FlexNumericStepperFunctions;
import org.safs.model.ComponentFunction;
import org.safs.model.components.UIComponent;
import org.safs.model.StepTestTable;

public class FlexNumericStepper extends GenericObject {

    /*****************
    Constructor 

    Create an instance of pseudo-component representing 
    a specific component in a specific window.
    
    @param window  Optional:NO 
           Specifies which Window this component is 'in'.
    @param compname Optional:NO 
           Specifies the AppMap name of the component in the Window.
    ****************/
    public FlexNumericStepper(Window window, String compname) {

        super(window, compname);
    }

    /*****************
    Constructor 

    Create an instance of pseudo-component representing 
    a specific component in a specific window.
    
    This convenience routine will create the requisite Window component.
    
    @param winname  Optional:NO 
           Specifies the AppMap name of the window.
    @param compname Optional:NO 
           Specifies the AppMap name of the component in the Window.
    ****************/
    public FlexNumericStepper(String winname, String compname) {

        this(new Window(winname), compname);
    }

    protected FlexNumericStepper(String compname) {

        super(compname);
    }



    /*********** <pre> 
                 Action to set the value of the stepper according to its StepperValue. Currently, this component function is for Flex NumericStepper only.
                  </pre>    Supporting Engines:
    <P/><UL>
    <LI>Rational RobotJ</LI>
    </UL>

     @param stepperValue  Optional:NO 
                 The value of the stepper to set.
              
     **********/
    public ComponentFunction setValue(String stepperValue ) {

        if ( stepperValue == null ) throw new IllegalArgumentException ( "setValue.stepperValue = null");
        return FlexNumericStepperFunctions.setValue(getWindow().getName(), getName(), stepperValue);
    }

    /*********** <pre> 
                 Action to set the value of the stepper according to its StepperValue. Currently, this component function is for Flex NumericStepper only.
                  </pre>    Supporting Engines:
    <P/><UL>
    <LI>Rational RobotJ</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param stepperValue  Optional:NO 
                 The value of the stepper to set.
              
     **********/
    public void setValue(StepTestTable table, String stepperValue ) {

        if ( table == null ) throw new IllegalArgumentException ( "setValue.table = null");

        if ( stepperValue == null ) throw new IllegalArgumentException ( "setValue.stepperValue = null");
        table.add( FlexNumericStepperFunctions.setValue(getWindow().getName(), getName(), stepperValue));
    }

}
