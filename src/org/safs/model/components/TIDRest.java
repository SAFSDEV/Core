
/******************************************************************************
 * TIDRest.java
 *
 * Copyright (C) SAS Institute, All rights reserved.
 * General Public License: https://www.gnu.org/licenses/gpl-3.0.en.html
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * !!! DO NOT EDIT THIS FILE !!!
 * This file is automatically generated from XML source.  Any changes you make 
 * here will be erased the next time the file is generated.
 *
 * The following assets are needed to generate this file:
 *
 *   TIDRestFunctions.xml
 *   keyword_library.dtd
 *   XSLJavaCommonFunctions.xsl
 *   XSLJavaComponentModel.xsl
 *
 * Example invocation to generate:
 *
 *   msxsl.exe TIDRestFunctions.xml XSLJavaComponentModel.xsl -o TIDRest.java
 *
 ******************************************************************************/ 
package org.safs.model.components;

import org.safs.model.commands.TIDRestFunctions;
import org.safs.model.ComponentFunction;
import org.safs.model.components.UIComponent;
import org.safs.model.StepTestTable;

public class TIDRest extends UIComponent {

    /*****************
    Constructor 

    Create an instance of pseudo-component representing 
    a specific component in a specific window.
    
    @param window  Optional:NO 
           Specifies which Window this component is 'in'.
    @param compname Optional:NO 
           Specifies the AppMap name of the component in the Window.
    ****************/
    public TIDRest(Window window, String compname) {

        super(window, compname);
    }

    /*****************
    Constructor 

    Create an instance of pseudo-component representing 
    a specific component in a specific window.
    
    This convenience routine will create the requisite Window component.
    
    @param winname  Optional:NO 
           Specifies the AppMap name of the window.
    @param compname Optional:NO 
           Specifies the AppMap name of the component in the Window.
    ****************/
    public TIDRest(String winname, String compname) {

        this(new Window(winname), compname);
    }

    protected TIDRest(String compname) {

        super(compname);
    }



    /*********** <pre>
                    Delete binary content. Not implemented yet.
                    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     **********/
    public ComponentFunction restDeleteBinary( ) {
        return TIDRestFunctions.restDeleteBinary(getWindow().getName(), getName());
    }

    /*********** <pre>
                    Delete binary content. Not implemented yet.
                    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     **********/
    public void restDeleteBinary(StepTestTable table ) {

        if ( table == null ) throw new IllegalArgumentException ( "restDeleteBinary.table = null");
        table.add( TIDRestFunctions.restDeleteBinary(getWindow().getName(), getName()));
    }

    /*********** <pre>
                    Delete css content. Not implemented yet.
                    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     **********/
    public ComponentFunction restDeleteCSS( ) {
        return TIDRestFunctions.restDeleteCSS(getWindow().getName(), getName());
    }

    /*********** <pre>
                    Delete css content. Not implemented yet.
                    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     **********/
    public void restDeleteCSS(StepTestTable table ) {

        if ( table == null ) throw new IllegalArgumentException ( "restDeleteCSS.table = null");
        table.add( TIDRestFunctions.restDeleteCSS(getWindow().getName(), getName()));
    }

    /*********** <pre>
                    Perform the "DELETE" method on a REST service with headers defined by user.
                
                    
                        This action will send the "DELETE" method with Headers defined by user.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public ComponentFunction restDeleteCustom(String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restDeleteCustom.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restDeleteCustom.responseIdVar = null");
        return TIDRestFunctions.restDeleteCustom(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication);
    }

    /*********** <pre>
                    Perform the "DELETE" method on a REST service with headers defined by user.
                
                    
                        This action will send the "DELETE" method with Headers defined by user.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public void restDeleteCustom(StepTestTable table, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restDeleteCustom.table = null");

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restDeleteCustom.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restDeleteCustom.responseIdVar = null");
        table.add( TIDRestFunctions.restDeleteCustom(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication));
    }

    /*********** <pre>
                    Perform the "DELETE" method on a REST service with headers defined by user.
                
                    
                        This action will send the "DELETE" method with Headers defined by user.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public ComponentFunction restDeleteCustom(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restDeleteCustom.parameters = null");
        return TIDRestFunctions.restDeleteCustom(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
                    Perform the "DELETE" method on a REST service with headers defined by user.
                
                    
                        This action will send the "DELETE" method with Headers defined by user.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public void restDeleteCustom(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restDeleteCustom.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restDeleteCustom.parameters = null");
        table.add( TIDRestFunctions.restDeleteCustom(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     **********/
    public ComponentFunction restDeleteHTML( ) {
        return TIDRestFunctions.restDeleteHTML(getWindow().getName(), getName());
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     **********/
    public void restDeleteHTML(StepTestTable table ) {

        if ( table == null ) throw new IllegalArgumentException ( "restDeleteHTML.table = null");
        table.add( TIDRestFunctions.restDeleteHTML(getWindow().getName(), getName()));
    }

    /*********** <pre>
                    Delete image content. Not implemented yet.
                    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     **********/
    public ComponentFunction restDeleteImage( ) {
        return TIDRestFunctions.restDeleteImage(getWindow().getName(), getName());
    }

    /*********** <pre>
                    Delete image content. Not implemented yet.
                    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     **********/
    public void restDeleteImage(StepTestTable table ) {

        if ( table == null ) throw new IllegalArgumentException ( "restDeleteImage.table = null");
        table.add( TIDRestFunctions.restDeleteImage(getWindow().getName(), getName()));
    }

    /*********** <pre>
                    Delete json content. Not implemented yet.
                    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     **********/
    public ComponentFunction restDeleteJSON( ) {
        return TIDRestFunctions.restDeleteJSON(getWindow().getName(), getName());
    }

    /*********** <pre>
                    Delete json content. Not implemented yet.
                    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     **********/
    public void restDeleteJSON(StepTestTable table ) {

        if ( table == null ) throw new IllegalArgumentException ( "restDeleteJSON.table = null");
        table.add( TIDRestFunctions.restDeleteJSON(getWindow().getName(), getName()));
    }

    /*********** <pre>
                    Delete javascript content. Not implemented yet.
                    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     **********/
    public ComponentFunction restDeleteScript( ) {
        return TIDRestFunctions.restDeleteScript(getWindow().getName(), getName());
    }

    /*********** <pre>
                    Delete javascript content. Not implemented yet.
                    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     **********/
    public void restDeleteScript(StepTestTable table ) {

        if ( table == null ) throw new IllegalArgumentException ( "restDeleteScript.table = null");
        table.add( TIDRestFunctions.restDeleteScript(getWindow().getName(), getName()));
    }

    /*********** <pre>
                    Delete text content. Not implemented yet.
                    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     **********/
    public ComponentFunction restDeleteText( ) {
        return TIDRestFunctions.restDeleteText(getWindow().getName(), getName());
    }

    /*********** <pre>
                    Delete text content. Not implemented yet.
                    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     **********/
    public void restDeleteText(StepTestTable table ) {

        if ( table == null ) throw new IllegalArgumentException ( "restDeleteText.table = null");
        table.add( TIDRestFunctions.restDeleteText(getWindow().getName(), getName()));
    }

    /*********** <pre>
                    Delete xml content. Not implemented yet.
                    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     **********/
    public ComponentFunction restDeleteXML( ) {
        return TIDRestFunctions.restDeleteXML(getWindow().getName(), getName());
    }

    /*********** <pre>
                    Delete xml content. Not implemented yet.
                    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     **********/
    public void restDeleteXML(StepTestTable table ) {

        if ( table == null ) throw new IllegalArgumentException ( "restDeleteXML.table = null");
        table.add( TIDRestFunctions.restDeleteXML(getWindow().getName(), getName()));
    }

    /*********** <pre>
                    Stop a session for a REST service.
                
                    Stop a session for a REST service.
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     **********/
    public ComponentFunction restEndServiceSession( ) {

        return TIDRestFunctions.restEndServiceSession(getWindow().getName(), getName());
    }

    /*********** <pre>
                    Stop a session for a REST service.
                
                    Stop a session for a REST service.
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     **********/
    public void restEndServiceSession(StepTestTable table ) {

        if ( table == null ) throw new IllegalArgumentException ( "restEndServiceSession.table = null");

        table.add( TIDRestFunctions.restEndServiceSession(getWindow().getName(), getName()));
    }

    /*********** <pre>
					Perform the "GET" method on a REST service, and verify the returned content is binary before returning it.
				
				    
				        This action will send the "GET" method with Headers containing "Accept : application/octet-stream".
				        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
				        This action will verify the reponse's headers containing "Content-Type: application/octet-stream" to make sure the returned content is binary.
				    
					
						If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
						before executing this action, which will be handled within a session.
						Otherwise, it will be considered as a one-shot connection, 
						and NO RestStartServiceSession needs to be called and user may need to provide authentication information by keyword's parameter.
					
				    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                	      The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                	    
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                	       The custom headers to be included in this REST request.
                	    
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public ComponentFunction restGetBinary(String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restGetBinary.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restGetBinary.responseIdVar = null");
        return TIDRestFunctions.restGetBinary(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication);
    }

    /*********** <pre>
					Perform the "GET" method on a REST service, and verify the returned content is binary before returning it.
				
				    
				        This action will send the "GET" method with Headers containing "Accept : application/octet-stream".
				        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
				        This action will verify the reponse's headers containing "Content-Type: application/octet-stream" to make sure the returned content is binary.
				    
					
						If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
						before executing this action, which will be handled within a session.
						Otherwise, it will be considered as a one-shot connection, 
						and NO RestStartServiceSession needs to be called and user may need to provide authentication information by keyword's parameter.
					
				    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                	      The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                	    
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                	       The custom headers to be included in this REST request.
                	    
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public void restGetBinary(StepTestTable table, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restGetBinary.table = null");

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restGetBinary.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restGetBinary.responseIdVar = null");
        table.add( TIDRestFunctions.restGetBinary(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication));
    }

    /*********** <pre>
					Perform the "GET" method on a REST service, and verify the returned content is binary before returning it.
				
				    
				        This action will send the "GET" method with Headers containing "Accept : application/octet-stream".
				        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
				        This action will verify the reponse's headers containing "Content-Type: application/octet-stream" to make sure the returned content is binary.
				    
					
						If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
						before executing this action, which will be handled within a session.
						Otherwise, it will be considered as a one-shot connection, 
						and NO RestStartServiceSession needs to be called and user may need to provide authentication information by keyword's parameter.
					
				    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                	      The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                	    <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                	       The custom headers to be included in this REST request.
                	    <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public ComponentFunction restGetBinary(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restGetBinary.parameters = null");
        return TIDRestFunctions.restGetBinary(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
					Perform the "GET" method on a REST service, and verify the returned content is binary before returning it.
				
				    
				        This action will send the "GET" method with Headers containing "Accept : application/octet-stream".
				        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
				        This action will verify the reponse's headers containing "Content-Type: application/octet-stream" to make sure the returned content is binary.
				    
					
						If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
						before executing this action, which will be handled within a session.
						Otherwise, it will be considered as a one-shot connection, 
						and NO RestStartServiceSession needs to be called and user may need to provide authentication information by keyword's parameter.
					
				    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                	      The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                	    <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                	       The custom headers to be included in this REST request.
                	    <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public void restGetBinary(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restGetBinary.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restGetBinary.parameters = null");
        table.add( TIDRestFunctions.restGetBinary(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre>
                    Perform the "GET" method on a REST service, and verify the returned content is css before returning it.
                
                    
                        This action will send the "GET" method with Headers containing "Accept : text/css".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public ComponentFunction restGetCSS(String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restGetCSS.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restGetCSS.responseIdVar = null");
        return TIDRestFunctions.restGetCSS(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication);
    }

    /*********** <pre>
                    Perform the "GET" method on a REST service, and verify the returned content is css before returning it.
                
                    
                        This action will send the "GET" method with Headers containing "Accept : text/css".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public void restGetCSS(StepTestTable table, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restGetCSS.table = null");

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restGetCSS.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restGetCSS.responseIdVar = null");
        table.add( TIDRestFunctions.restGetCSS(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication));
    }

    /*********** <pre>
                    Perform the "GET" method on a REST service, and verify the returned content is css before returning it.
                
                    
                        This action will send the "GET" method with Headers containing "Accept : text/css".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public ComponentFunction restGetCSS(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restGetCSS.parameters = null");
        return TIDRestFunctions.restGetCSS(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
                    Perform the "GET" method on a REST service, and verify the returned content is css before returning it.
                
                    
                        This action will send the "GET" method with Headers containing "Accept : text/css".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public void restGetCSS(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restGetCSS.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restGetCSS.parameters = null");
        table.add( TIDRestFunctions.restGetCSS(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre>
                    Perform the "GET" method on a REST service with headers defined by user, and return the content.
                
                    
                        This action will send the "GET" method with Headers defined by user.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:NO
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public ComponentFunction restGetCustom(String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( headers == null ) throw new IllegalArgumentException ( "restGetCustom.headers = null");
        if ( relativeURI == null ) throw new IllegalArgumentException ( "restGetCustom.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restGetCustom.responseIdVar = null");
        return TIDRestFunctions.restGetCustom(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication);
    }

    /*********** <pre>
                    Perform the "GET" method on a REST service with headers defined by user, and return the content.
                
                    
                        This action will send the "GET" method with Headers defined by user.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:NO
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public void restGetCustom(StepTestTable table, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restGetCustom.table = null");

        if ( headers == null ) throw new IllegalArgumentException ( "restGetCustom.headers = null");
        if ( relativeURI == null ) throw new IllegalArgumentException ( "restGetCustom.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restGetCustom.responseIdVar = null");
        table.add( TIDRestFunctions.restGetCustom(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication));
    }

    /*********** <pre>
                    Perform the "GET" method on a REST service with headers defined by user, and return the content.
                
                    
                        This action will send the "GET" method with Headers defined by user.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:NO
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public ComponentFunction restGetCustom(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restGetCustom.parameters = null");
        return TIDRestFunctions.restGetCustom(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
                    Perform the "GET" method on a REST service with headers defined by user, and return the content.
                
                    
                        This action will send the "GET" method with Headers defined by user.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:NO
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public void restGetCustom(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restGetCustom.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restGetCustom.parameters = null");
        table.add( TIDRestFunctions.restGetCustom(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre>
                    Perform the "GET" method on a REST service, and verify the returned content is html before returning it.
                
                    
                        This action will send the "GET" method with Headers containing "Accept : text/html".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public ComponentFunction restGetHTML(String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restGetHTML.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restGetHTML.responseIdVar = null");
        return TIDRestFunctions.restGetHTML(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication);
    }

    /*********** <pre>
                    Perform the "GET" method on a REST service, and verify the returned content is html before returning it.
                
                    
                        This action will send the "GET" method with Headers containing "Accept : text/html".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public void restGetHTML(StepTestTable table, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restGetHTML.table = null");

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restGetHTML.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restGetHTML.responseIdVar = null");
        table.add( TIDRestFunctions.restGetHTML(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication));
    }

    /*********** <pre>
                    Perform the "GET" method on a REST service, and verify the returned content is html before returning it.
                
                    
                        This action will send the "GET" method with Headers containing "Accept : text/html".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public ComponentFunction restGetHTML(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restGetHTML.parameters = null");
        return TIDRestFunctions.restGetHTML(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
                    Perform the "GET" method on a REST service, and verify the returned content is html before returning it.
                
                    
                        This action will send the "GET" method with Headers containing "Accept : text/html".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public void restGetHTML(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restGetHTML.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restGetHTML.parameters = null");
        table.add( TIDRestFunctions.restGetHTML(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre>
                    Perform the "GET" method on a REST service, and verify the returned content is image before returning it.
                
                    
                        This action will send the "GET" method with Headers containing "Accept : image".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public ComponentFunction restGetImage(String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restGetImage.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restGetImage.responseIdVar = null");
        return TIDRestFunctions.restGetImage(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication);
    }

    /*********** <pre>
                    Perform the "GET" method on a REST service, and verify the returned content is image before returning it.
                
                    
                        This action will send the "GET" method with Headers containing "Accept : image".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public void restGetImage(StepTestTable table, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restGetImage.table = null");

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restGetImage.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restGetImage.responseIdVar = null");
        table.add( TIDRestFunctions.restGetImage(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication));
    }

    /*********** <pre>
                    Perform the "GET" method on a REST service, and verify the returned content is image before returning it.
                
                    
                        This action will send the "GET" method with Headers containing "Accept : image".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public ComponentFunction restGetImage(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restGetImage.parameters = null");
        return TIDRestFunctions.restGetImage(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
                    Perform the "GET" method on a REST service, and verify the returned content is image before returning it.
                
                    
                        This action will send the "GET" method with Headers containing "Accept : image".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public void restGetImage(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restGetImage.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restGetImage.parameters = null");
        table.add( TIDRestFunctions.restGetImage(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre>
                    Perform the "GET" method on a REST service, and verify the returned content is json before returning it.
                
                    
                        This action will send the "GET" method with Headers containing "Accept : application/json".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public ComponentFunction restGetJSON(String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restGetJSON.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restGetJSON.responseIdVar = null");
        return TIDRestFunctions.restGetJSON(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication);
    }

    /*********** <pre>
                    Perform the "GET" method on a REST service, and verify the returned content is json before returning it.
                
                    
                        This action will send the "GET" method with Headers containing "Accept : application/json".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public void restGetJSON(StepTestTable table, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restGetJSON.table = null");

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restGetJSON.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restGetJSON.responseIdVar = null");
        table.add( TIDRestFunctions.restGetJSON(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication));
    }

    /*********** <pre>
                    Perform the "GET" method on a REST service, and verify the returned content is json before returning it.
                
                    
                        This action will send the "GET" method with Headers containing "Accept : application/json".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public ComponentFunction restGetJSON(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restGetJSON.parameters = null");
        return TIDRestFunctions.restGetJSON(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
                    Perform the "GET" method on a REST service, and verify the returned content is json before returning it.
                
                    
                        This action will send the "GET" method with Headers containing "Accept : application/json".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public void restGetJSON(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restGetJSON.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restGetJSON.parameters = null");
        table.add( TIDRestFunctions.restGetJSON(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre>
                    Perform the "GET" method on a REST service, and verify the returned content is javascript before returning it.
                
                    
                        This action will send the "GET" method with Headers containing "Accept : application/javascript".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public ComponentFunction restGetScript(String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restGetScript.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restGetScript.responseIdVar = null");
        return TIDRestFunctions.restGetScript(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication);
    }

    /*********** <pre>
                    Perform the "GET" method on a REST service, and verify the returned content is javascript before returning it.
                
                    
                        This action will send the "GET" method with Headers containing "Accept : application/javascript".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public void restGetScript(StepTestTable table, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restGetScript.table = null");

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restGetScript.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restGetScript.responseIdVar = null");
        table.add( TIDRestFunctions.restGetScript(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication));
    }

    /*********** <pre>
                    Perform the "GET" method on a REST service, and verify the returned content is javascript before returning it.
                
                    
                        This action will send the "GET" method with Headers containing "Accept : application/javascript".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public ComponentFunction restGetScript(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restGetScript.parameters = null");
        return TIDRestFunctions.restGetScript(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
                    Perform the "GET" method on a REST service, and verify the returned content is javascript before returning it.
                
                    
                        This action will send the "GET" method with Headers containing "Accept : application/javascript".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public void restGetScript(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restGetScript.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restGetScript.parameters = null");
        table.add( TIDRestFunctions.restGetScript(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre>
                    Perform the "GET" method on a REST service, and verify the returned content is text before returning it.
                
                    
                        This action will send the "GET" method with Headers containing "Accept : text/plain".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public ComponentFunction restGetText(String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restGetText.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restGetText.responseIdVar = null");
        return TIDRestFunctions.restGetText(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication);
    }

    /*********** <pre>
                    Perform the "GET" method on a REST service, and verify the returned content is text before returning it.
                
                    
                        This action will send the "GET" method with Headers containing "Accept : text/plain".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public void restGetText(StepTestTable table, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restGetText.table = null");

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restGetText.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restGetText.responseIdVar = null");
        table.add( TIDRestFunctions.restGetText(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication));
    }

    /*********** <pre>
                    Perform the "GET" method on a REST service, and verify the returned content is text before returning it.
                
                    
                        This action will send the "GET" method with Headers containing "Accept : text/plain".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public ComponentFunction restGetText(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restGetText.parameters = null");
        return TIDRestFunctions.restGetText(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
                    Perform the "GET" method on a REST service, and verify the returned content is text before returning it.
                
                    
                        This action will send the "GET" method with Headers containing "Accept : text/plain".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public void restGetText(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restGetText.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restGetText.parameters = null");
        table.add( TIDRestFunctions.restGetText(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre>
                    Perform the "GET" method on a REST service, and verify the returned content is xml before returning it.
                
                    
                        This action will send the "GET" method with Headers containing "Accept : text/xml".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public ComponentFunction restGetXML(String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restGetXML.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restGetXML.responseIdVar = null");
        return TIDRestFunctions.restGetXML(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication);
    }

    /*********** <pre>
                    Perform the "GET" method on a REST service, and verify the returned content is xml before returning it.
                
                    
                        This action will send the "GET" method with Headers containing "Accept : text/xml".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public void restGetXML(StepTestTable table, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restGetXML.table = null");

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restGetXML.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restGetXML.responseIdVar = null");
        table.add( TIDRestFunctions.restGetXML(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication));
    }

    /*********** <pre>
                    Perform the "GET" method on a REST service, and verify the returned content is xml before returning it.
                
                    
                        This action will send the "GET" method with Headers containing "Accept : text/xml".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public ComponentFunction restGetXML(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restGetXML.parameters = null");
        return TIDRestFunctions.restGetXML(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
                    Perform the "GET" method on a REST service, and verify the returned content is xml before returning it.
                
                    
                        This action will send the "GET" method with Headers containing "Accept : text/xml".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public void restGetXML(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restGetXML.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restGetXML.parameters = null");
        table.add( TIDRestFunctions.restGetXML(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre>
                    Perform the "HEAD" method on a REST service, and verify the returned content is binary before returning the header part.
                
                    
                        This action will send the "HEAD" method with Headers containing "Accept : application/octet-stream".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public ComponentFunction restHeadBinary(String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restHeadBinary.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restHeadBinary.responseIdVar = null");
        return TIDRestFunctions.restHeadBinary(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication);
    }

    /*********** <pre>
                    Perform the "HEAD" method on a REST service, and verify the returned content is binary before returning the header part.
                
                    
                        This action will send the "HEAD" method with Headers containing "Accept : application/octet-stream".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public void restHeadBinary(StepTestTable table, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restHeadBinary.table = null");

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restHeadBinary.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restHeadBinary.responseIdVar = null");
        table.add( TIDRestFunctions.restHeadBinary(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication));
    }

    /*********** <pre>
                    Perform the "HEAD" method on a REST service, and verify the returned content is binary before returning the header part.
                
                    
                        This action will send the "HEAD" method with Headers containing "Accept : application/octet-stream".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public ComponentFunction restHeadBinary(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restHeadBinary.parameters = null");
        return TIDRestFunctions.restHeadBinary(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
                    Perform the "HEAD" method on a REST service, and verify the returned content is binary before returning the header part.
                
                    
                        This action will send the "HEAD" method with Headers containing "Accept : application/octet-stream".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public void restHeadBinary(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restHeadBinary.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restHeadBinary.parameters = null");
        table.add( TIDRestFunctions.restHeadBinary(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre>
                    Perform the "HEAD" method on a REST service, and verify the returned content is css before returning the header part.
                
                    
                        This action will send the "HEAD" method with Headers containing "Accept : text/css".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public ComponentFunction restHeadCSS(String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restHeadCSS.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restHeadCSS.responseIdVar = null");
        return TIDRestFunctions.restHeadCSS(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication);
    }

    /*********** <pre>
                    Perform the "HEAD" method on a REST service, and verify the returned content is css before returning the header part.
                
                    
                        This action will send the "HEAD" method with Headers containing "Accept : text/css".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public void restHeadCSS(StepTestTable table, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restHeadCSS.table = null");

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restHeadCSS.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restHeadCSS.responseIdVar = null");
        table.add( TIDRestFunctions.restHeadCSS(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication));
    }

    /*********** <pre>
                    Perform the "HEAD" method on a REST service, and verify the returned content is css before returning the header part.
                
                    
                        This action will send the "HEAD" method with Headers containing "Accept : text/css".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public ComponentFunction restHeadCSS(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restHeadCSS.parameters = null");
        return TIDRestFunctions.restHeadCSS(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
                    Perform the "HEAD" method on a REST service, and verify the returned content is css before returning the header part.
                
                    
                        This action will send the "HEAD" method with Headers containing "Accept : text/css".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public void restHeadCSS(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restHeadCSS.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restHeadCSS.parameters = null");
        table.add( TIDRestFunctions.restHeadCSS(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre>
                    Perform the "HEAD" method (with headers defined by user) on a REST service, and get back the header part.
                
                    
                        This action will send the "HEAD" method with Headers defined by user.
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public ComponentFunction restHeadCustom(String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restHeadCustom.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restHeadCustom.responseIdVar = null");
        return TIDRestFunctions.restHeadCustom(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication);
    }

    /*********** <pre>
                    Perform the "HEAD" method (with headers defined by user) on a REST service, and get back the header part.
                
                    
                        This action will send the "HEAD" method with Headers defined by user.
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public void restHeadCustom(StepTestTable table, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restHeadCustom.table = null");

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restHeadCustom.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restHeadCustom.responseIdVar = null");
        table.add( TIDRestFunctions.restHeadCustom(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication));
    }

    /*********** <pre>
                    Perform the "HEAD" method (with headers defined by user) on a REST service, and get back the header part.
                
                    
                        This action will send the "HEAD" method with Headers defined by user.
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public ComponentFunction restHeadCustom(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restHeadCustom.parameters = null");
        return TIDRestFunctions.restHeadCustom(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
                    Perform the "HEAD" method (with headers defined by user) on a REST service, and get back the header part.
                
                    
                        This action will send the "HEAD" method with Headers defined by user.
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public void restHeadCustom(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restHeadCustom.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restHeadCustom.parameters = null");
        table.add( TIDRestFunctions.restHeadCustom(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre>
                    Perform the "HEAD" method on a REST service, and verify the returned content is html before returning the header part.
                
                    
                        This action will send the "HEAD" method with Headers containing "Accept : text/html".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public ComponentFunction restHeadHTML(String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restHeadHTML.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restHeadHTML.responseIdVar = null");
        return TIDRestFunctions.restHeadHTML(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication);
    }

    /*********** <pre>
                    Perform the "HEAD" method on a REST service, and verify the returned content is html before returning the header part.
                
                    
                        This action will send the "HEAD" method with Headers containing "Accept : text/html".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public void restHeadHTML(StepTestTable table, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restHeadHTML.table = null");

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restHeadHTML.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restHeadHTML.responseIdVar = null");
        table.add( TIDRestFunctions.restHeadHTML(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication));
    }

    /*********** <pre>
                    Perform the "HEAD" method on a REST service, and verify the returned content is html before returning the header part.
                
                    
                        This action will send the "HEAD" method with Headers containing "Accept : text/html".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public ComponentFunction restHeadHTML(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restHeadHTML.parameters = null");
        return TIDRestFunctions.restHeadHTML(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
                    Perform the "HEAD" method on a REST service, and verify the returned content is html before returning the header part.
                
                    
                        This action will send the "HEAD" method with Headers containing "Accept : text/html".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public void restHeadHTML(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restHeadHTML.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restHeadHTML.parameters = null");
        table.add( TIDRestFunctions.restHeadHTML(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre>
                    Perform the "HEAD" method on a REST service, and verify the returned content is image before returning the header part.
                
                    
                        This action will send the "HEAD" method with Headers containing "Accept : image".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public ComponentFunction restHeadImage(String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restHeadImage.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restHeadImage.responseIdVar = null");
        return TIDRestFunctions.restHeadImage(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication);
    }

    /*********** <pre>
                    Perform the "HEAD" method on a REST service, and verify the returned content is image before returning the header part.
                
                    
                        This action will send the "HEAD" method with Headers containing "Accept : image".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public void restHeadImage(StepTestTable table, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restHeadImage.table = null");

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restHeadImage.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restHeadImage.responseIdVar = null");
        table.add( TIDRestFunctions.restHeadImage(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication));
    }

    /*********** <pre>
                    Perform the "HEAD" method on a REST service, and verify the returned content is image before returning the header part.
                
                    
                        This action will send the "HEAD" method with Headers containing "Accept : image".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public ComponentFunction restHeadImage(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restHeadImage.parameters = null");
        return TIDRestFunctions.restHeadImage(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
                    Perform the "HEAD" method on a REST service, and verify the returned content is image before returning the header part.
                
                    
                        This action will send the "HEAD" method with Headers containing "Accept : image".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public void restHeadImage(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restHeadImage.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restHeadImage.parameters = null");
        table.add( TIDRestFunctions.restHeadImage(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre>
                    Perform the "HEAD" method on a REST service, and verify the returned content is json before returning the header part.
                
                    
                        This action will send the "HEAD" method with Headers containing "Accept : application/json".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public ComponentFunction restHeadJSON(String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restHeadJSON.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restHeadJSON.responseIdVar = null");
        return TIDRestFunctions.restHeadJSON(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication);
    }

    /*********** <pre>
                    Perform the "HEAD" method on a REST service, and verify the returned content is json before returning the header part.
                
                    
                        This action will send the "HEAD" method with Headers containing "Accept : application/json".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public void restHeadJSON(StepTestTable table, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restHeadJSON.table = null");

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restHeadJSON.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restHeadJSON.responseIdVar = null");
        table.add( TIDRestFunctions.restHeadJSON(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication));
    }

    /*********** <pre>
                    Perform the "HEAD" method on a REST service, and verify the returned content is json before returning the header part.
                
                    
                        This action will send the "HEAD" method with Headers containing "Accept : application/json".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public ComponentFunction restHeadJSON(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restHeadJSON.parameters = null");
        return TIDRestFunctions.restHeadJSON(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
                    Perform the "HEAD" method on a REST service, and verify the returned content is json before returning the header part.
                
                    
                        This action will send the "HEAD" method with Headers containing "Accept : application/json".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public void restHeadJSON(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restHeadJSON.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restHeadJSON.parameters = null");
        table.add( TIDRestFunctions.restHeadJSON(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre>
                    Perform the "HEAD" method on a REST service, and verify the returned content is javascript before returning the header part.
                
                    
                        This action will send the "HEAD" method with Headers containing "Accept : application/javascript".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public ComponentFunction restHeadScript(String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restHeadScript.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restHeadScript.responseIdVar = null");
        return TIDRestFunctions.restHeadScript(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication);
    }

    /*********** <pre>
                    Perform the "HEAD" method on a REST service, and verify the returned content is javascript before returning the header part.
                
                    
                        This action will send the "HEAD" method with Headers containing "Accept : application/javascript".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public void restHeadScript(StepTestTable table, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restHeadScript.table = null");

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restHeadScript.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restHeadScript.responseIdVar = null");
        table.add( TIDRestFunctions.restHeadScript(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication));
    }

    /*********** <pre>
                    Perform the "HEAD" method on a REST service, and verify the returned content is javascript before returning the header part.
                
                    
                        This action will send the "HEAD" method with Headers containing "Accept : application/javascript".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public ComponentFunction restHeadScript(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restHeadScript.parameters = null");
        return TIDRestFunctions.restHeadScript(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
                    Perform the "HEAD" method on a REST service, and verify the returned content is javascript before returning the header part.
                
                    
                        This action will send the "HEAD" method with Headers containing "Accept : application/javascript".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public void restHeadScript(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restHeadScript.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restHeadScript.parameters = null");
        table.add( TIDRestFunctions.restHeadScript(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre>
                    Perform the "HEAD" method on a REST service, and verify the returned content is text before returning the header part.
                
                    
                        This action will send the "HEAD" method with Headers containing "Accept : text/plain".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public ComponentFunction restHeadText(String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restHeadText.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restHeadText.responseIdVar = null");
        return TIDRestFunctions.restHeadText(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication);
    }

    /*********** <pre>
                    Perform the "HEAD" method on a REST service, and verify the returned content is text before returning the header part.
                
                    
                        This action will send the "HEAD" method with Headers containing "Accept : text/plain".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public void restHeadText(StepTestTable table, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restHeadText.table = null");

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restHeadText.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restHeadText.responseIdVar = null");
        table.add( TIDRestFunctions.restHeadText(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication));
    }

    /*********** <pre>
                    Perform the "HEAD" method on a REST service, and verify the returned content is text before returning the header part.
                
                    
                        This action will send the "HEAD" method with Headers containing "Accept : text/plain".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public ComponentFunction restHeadText(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restHeadText.parameters = null");
        return TIDRestFunctions.restHeadText(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
                    Perform the "HEAD" method on a REST service, and verify the returned content is text before returning the header part.
                
                    
                        This action will send the "HEAD" method with Headers containing "Accept : text/plain".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public void restHeadText(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restHeadText.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restHeadText.parameters = null");
        table.add( TIDRestFunctions.restHeadText(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre>
                    Perform the "HEAD" method on a REST service, and verify the returned content is xml before returning the header part.
                
                    
                        This action will send the "HEAD" method with Headers containing "Accept : text/xml".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public ComponentFunction restHeadXML(String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restHeadXML.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restHeadXML.responseIdVar = null");
        return TIDRestFunctions.restHeadXML(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication);
    }

    /*********** <pre>
                    Perform the "HEAD" method on a REST service, and verify the returned content is xml before returning the header part.
                
                    
                        This action will send the "HEAD" method with Headers containing "Accept : text/xml".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public void restHeadXML(StepTestTable table, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restHeadXML.table = null");

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restHeadXML.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restHeadXML.responseIdVar = null");
        table.add( TIDRestFunctions.restHeadXML(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication));
    }

    /*********** <pre>
                    Perform the "HEAD" method on a REST service, and verify the returned content is xml before returning the header part.
                
                    
                        This action will send the "HEAD" method with Headers containing "Accept : text/xml".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public ComponentFunction restHeadXML(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restHeadXML.parameters = null");
        return TIDRestFunctions.restHeadXML(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
                    Perform the "HEAD" method on a REST service, and verify the returned content is xml before returning the header part.
                
                    
                        This action will send the "HEAD" method with Headers containing "Accept : text/xml".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public void restHeadXML(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restHeadXML.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restHeadXML.parameters = null");
        table.add( TIDRestFunctions.restHeadXML(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     **********/
    public ComponentFunction restPatchBinary( ) {
        return TIDRestFunctions.restPatchBinary(getWindow().getName(), getName());
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     **********/
    public void restPatchBinary(StepTestTable table ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPatchBinary.table = null");
        table.add( TIDRestFunctions.restPatchBinary(getWindow().getName(), getName()));
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     **********/
    public ComponentFunction restPatchCSS( ) {
        return TIDRestFunctions.restPatchCSS(getWindow().getName(), getName());
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     **********/
    public void restPatchCSS(StepTestTable table ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPatchCSS.table = null");
        table.add( TIDRestFunctions.restPatchCSS(getWindow().getName(), getName()));
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     **********/
    public ComponentFunction restPatchCustom( ) {
        return TIDRestFunctions.restPatchCustom(getWindow().getName(), getName());
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     **********/
    public void restPatchCustom(StepTestTable table ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPatchCustom.table = null");
        table.add( TIDRestFunctions.restPatchCustom(getWindow().getName(), getName()));
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     **********/
    public ComponentFunction restPatchHTML( ) {
        return TIDRestFunctions.restPatchHTML(getWindow().getName(), getName());
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     **********/
    public void restPatchHTML(StepTestTable table ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPatchHTML.table = null");
        table.add( TIDRestFunctions.restPatchHTML(getWindow().getName(), getName()));
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     **********/
    public ComponentFunction restPatchImage( ) {
        return TIDRestFunctions.restPatchImage(getWindow().getName(), getName());
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     **********/
    public void restPatchImage(StepTestTable table ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPatchImage.table = null");
        table.add( TIDRestFunctions.restPatchImage(getWindow().getName(), getName()));
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     **********/
    public ComponentFunction restPatchJSON( ) {
        return TIDRestFunctions.restPatchJSON(getWindow().getName(), getName());
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     **********/
    public void restPatchJSON(StepTestTable table ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPatchJSON.table = null");
        table.add( TIDRestFunctions.restPatchJSON(getWindow().getName(), getName()));
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     **********/
    public ComponentFunction restPatchScript( ) {
        return TIDRestFunctions.restPatchScript(getWindow().getName(), getName());
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     **********/
    public void restPatchScript(StepTestTable table ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPatchScript.table = null");
        table.add( TIDRestFunctions.restPatchScript(getWindow().getName(), getName()));
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     **********/
    public ComponentFunction restPatchText( ) {
        return TIDRestFunctions.restPatchText(getWindow().getName(), getName());
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     **********/
    public void restPatchText(StepTestTable table ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPatchText.table = null");
        table.add( TIDRestFunctions.restPatchText(getWindow().getName(), getName()));
    }

    /*********** <pre>
                    Perform the "PATCH" method on a REST service, and verify the returned status code is 200 or 204.
                
                    
                        This action will send the "PATCH" method with Headers containing "Content-Type : text/xml".
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public ComponentFunction restPatchXML(String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restPatchXML.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restPatchXML.responseIdVar = null");
        return TIDRestFunctions.restPatchXML(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication);
    }

    /*********** <pre>
                    Perform the "PATCH" method on a REST service, and verify the returned status code is 200 or 204.
                
                    
                        This action will send the "PATCH" method with Headers containing "Content-Type : text/xml".
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public void restPatchXML(StepTestTable table, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPatchXML.table = null");

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restPatchXML.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restPatchXML.responseIdVar = null");
        table.add( TIDRestFunctions.restPatchXML(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication));
    }

    /*********** <pre>
                    Perform the "PATCH" method on a REST service, and verify the returned status code is 200 or 204.
                
                    
                        This action will send the "PATCH" method with Headers containing "Content-Type : text/xml".
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public ComponentFunction restPatchXML(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restPatchXML.parameters = null");
        return TIDRestFunctions.restPatchXML(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
                    Perform the "PATCH" method on a REST service, and verify the returned status code is 200 or 204.
                
                    
                        This action will send the "PATCH" method with Headers containing "Content-Type : text/xml".
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public void restPatchXML(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPatchXML.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restPatchXML.parameters = null");
        table.add( TIDRestFunctions.restPatchXML(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     **********/
    public ComponentFunction restPostBinary( ) {
        return TIDRestFunctions.restPostBinary(getWindow().getName(), getName());
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     **********/
    public void restPostBinary(StepTestTable table ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPostBinary.table = null");
        table.add( TIDRestFunctions.restPostBinary(getWindow().getName(), getName()));
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     **********/
    public ComponentFunction restPostCSS( ) {
        return TIDRestFunctions.restPostCSS(getWindow().getName(), getName());
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     **********/
    public void restPostCSS(StepTestTable table ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPostCSS.table = null");
        table.add( TIDRestFunctions.restPostCSS(getWindow().getName(), getName()));
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     **********/
    public ComponentFunction restPostCustom( ) {
        return TIDRestFunctions.restPostCustom(getWindow().getName(), getName());
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     **********/
    public void restPostCustom(StepTestTable table ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPostCustom.table = null");
        table.add( TIDRestFunctions.restPostCustom(getWindow().getName(), getName()));
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     **********/
    public ComponentFunction restPostHTML( ) {
        return TIDRestFunctions.restPostHTML(getWindow().getName(), getName());
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     **********/
    public void restPostHTML(StepTestTable table ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPostHTML.table = null");
        table.add( TIDRestFunctions.restPostHTML(getWindow().getName(), getName()));
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     **********/
    public ComponentFunction restPostImage( ) {
        return TIDRestFunctions.restPostImage(getWindow().getName(), getName());
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     **********/
    public void restPostImage(StepTestTable table ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPostImage.table = null");
        table.add( TIDRestFunctions.restPostImage(getWindow().getName(), getName()));
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     **********/
    public ComponentFunction restPostJSON( ) {
        return TIDRestFunctions.restPostJSON(getWindow().getName(), getName());
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     **********/
    public void restPostJSON(StepTestTable table ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPostJSON.table = null");
        table.add( TIDRestFunctions.restPostJSON(getWindow().getName(), getName()));
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     **********/
    public ComponentFunction restPostScript( ) {
        return TIDRestFunctions.restPostScript(getWindow().getName(), getName());
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     **********/
    public void restPostScript(StepTestTable table ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPostScript.table = null");
        table.add( TIDRestFunctions.restPostScript(getWindow().getName(), getName()));
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     **********/
    public ComponentFunction restPostText( ) {
        return TIDRestFunctions.restPostText(getWindow().getName(), getName());
    }

    /*********** <pre>    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     **********/
    public void restPostText(StepTestTable table ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPostText.table = null");
        table.add( TIDRestFunctions.restPostText(getWindow().getName(), getName()));
    }

    /*********** <pre>
                    Perform the "POST" method on a REST service, and verify the returned status code is 201 ("created").
                
                    
                        This action will send the "POST" method with Headers containing "Content-Type : text/xml".
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public ComponentFunction restPostXML(String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restPostXML.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restPostXML.responseIdVar = null");
        return TIDRestFunctions.restPostXML(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication);
    }

    /*********** <pre>
                    Perform the "POST" method on a REST service, and verify the returned status code is 201 ("created").
                
                    
                        This action will send the "POST" method with Headers containing "Content-Type : text/xml".
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public void restPostXML(StepTestTable table, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPostXML.table = null");

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restPostXML.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restPostXML.responseIdVar = null");
        table.add( TIDRestFunctions.restPostXML(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication));
    }

    /*********** <pre>
                    Perform the "POST" method on a REST service, and verify the returned status code is 201 ("created").
                
                    
                        This action will send the "POST" method with Headers containing "Content-Type : text/xml".
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public ComponentFunction restPostXML(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restPostXML.parameters = null");
        return TIDRestFunctions.restPostXML(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
                    Perform the "POST" method on a REST service, and verify the returned status code is 201 ("created").
                
                    
                        This action will send the "POST" method with Headers containing "Content-Type : text/xml".
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public void restPostXML(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPostXML.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restPostXML.parameters = null");
        table.add( TIDRestFunctions.restPostXML(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre>
                    Put binary content. Not implemented yet.
                    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     **********/
    public ComponentFunction restPutBinary( ) {
        return TIDRestFunctions.restPutBinary(getWindow().getName(), getName());
    }

    /*********** <pre>
                    Put binary content. Not implemented yet.
                    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     **********/
    public void restPutBinary(StepTestTable table ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPutBinary.table = null");
        table.add( TIDRestFunctions.restPutBinary(getWindow().getName(), getName()));
    }

    /*********** <pre>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                
                    
                        This action will send the "PUT" method with Headers containing "Content-Type : text/css".
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public ComponentFunction restPutCSS(String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restPutCSS.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restPutCSS.responseIdVar = null");
        return TIDRestFunctions.restPutCSS(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication);
    }

    /*********** <pre>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                
                    
                        This action will send the "PUT" method with Headers containing "Content-Type : text/css".
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public void restPutCSS(StepTestTable table, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPutCSS.table = null");

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restPutCSS.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restPutCSS.responseIdVar = null");
        table.add( TIDRestFunctions.restPutCSS(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication));
    }

    /*********** <pre>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                
                    
                        This action will send the "PUT" method with Headers containing "Content-Type : text/css".
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public ComponentFunction restPutCSS(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restPutCSS.parameters = null");
        return TIDRestFunctions.restPutCSS(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                
                    
                        This action will send the "PUT" method with Headers containing "Content-Type : text/css".
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public void restPutCSS(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPutCSS.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restPutCSS.parameters = null");
        table.add( TIDRestFunctions.restPutCSS(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                
                    
                        This action will send the "PUT" method with Headers defined by user.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public ComponentFunction restPutCustom(String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restPutCustom.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restPutCustom.responseIdVar = null");
        return TIDRestFunctions.restPutCustom(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication);
    }

    /*********** <pre>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                
                    
                        This action will send the "PUT" method with Headers defined by user.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public void restPutCustom(StepTestTable table, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPutCustom.table = null");

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restPutCustom.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restPutCustom.responseIdVar = null");
        table.add( TIDRestFunctions.restPutCustom(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication));
    }

    /*********** <pre>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                
                    
                        This action will send the "PUT" method with Headers defined by user.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public ComponentFunction restPutCustom(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restPutCustom.parameters = null");
        return TIDRestFunctions.restPutCustom(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                
                    
                        This action will send the "PUT" method with Headers defined by user.
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public void restPutCustom(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPutCustom.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restPutCustom.parameters = null");
        table.add( TIDRestFunctions.restPutCustom(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                
                    
                        This action will send the "PUT" method with Headers containing "Content-Type : text/html".
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public ComponentFunction restPutHTML(String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restPutHTML.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restPutHTML.responseIdVar = null");
        return TIDRestFunctions.restPutHTML(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication);
    }

    /*********** <pre>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                
                    
                        This action will send the "PUT" method with Headers containing "Content-Type : text/html".
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public void restPutHTML(StepTestTable table, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPutHTML.table = null");

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restPutHTML.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restPutHTML.responseIdVar = null");
        table.add( TIDRestFunctions.restPutHTML(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication));
    }

    /*********** <pre>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                
                    
                        This action will send the "PUT" method with Headers containing "Content-Type : text/html".
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public ComponentFunction restPutHTML(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restPutHTML.parameters = null");
        return TIDRestFunctions.restPutHTML(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                
                    
                        This action will send the "PUT" method with Headers containing "Content-Type : text/html".
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public void restPutHTML(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPutHTML.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restPutHTML.parameters = null");
        table.add( TIDRestFunctions.restPutHTML(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre>
                    Put image content. Not implemented yet.
                    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     **********/
    public ComponentFunction restPutImage( ) {
        return TIDRestFunctions.restPutImage(getWindow().getName(), getName());
    }

    /*********** <pre>
                    Put image content. Not implemented yet.
                    </pre>    Supporting Engines:
    <P/><UL>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     **********/
    public void restPutImage(StepTestTable table ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPutImage.table = null");
        table.add( TIDRestFunctions.restPutImage(getWindow().getName(), getName()));
    }

    /*********** <pre>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                
                    
                        This action will send the "PUT" method with Headers containing "Content-Type : application/json".
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public ComponentFunction restPutJSON(String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restPutJSON.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restPutJSON.responseIdVar = null");
        return TIDRestFunctions.restPutJSON(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication);
    }

    /*********** <pre>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                
                    
                        This action will send the "PUT" method with Headers containing "Content-Type : application/json".
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public void restPutJSON(StepTestTable table, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPutJSON.table = null");

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restPutJSON.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restPutJSON.responseIdVar = null");
        table.add( TIDRestFunctions.restPutJSON(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication));
    }

    /*********** <pre>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                
                    
                        This action will send the "PUT" method with Headers containing "Content-Type : application/json".
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public ComponentFunction restPutJSON(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restPutJSON.parameters = null");
        return TIDRestFunctions.restPutJSON(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                
                    
                        This action will send the "PUT" method with Headers containing "Content-Type : application/json".
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public void restPutJSON(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPutJSON.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restPutJSON.parameters = null");
        table.add( TIDRestFunctions.restPutJSON(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                
                    
                        This action will send the "PUT" method with Headers containing "Content-Type : application/javascript".
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public ComponentFunction restPutScript(String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restPutScript.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restPutScript.responseIdVar = null");
        return TIDRestFunctions.restPutScript(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication);
    }

    /*********** <pre>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                
                    
                        This action will send the "PUT" method with Headers containing "Content-Type : application/javascript".
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public void restPutScript(StepTestTable table, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPutScript.table = null");

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restPutScript.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restPutScript.responseIdVar = null");
        table.add( TIDRestFunctions.restPutScript(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication));
    }

    /*********** <pre>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                
                    
                        This action will send the "PUT" method with Headers containing "Content-Type : application/javascript".
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public ComponentFunction restPutScript(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restPutScript.parameters = null");
        return TIDRestFunctions.restPutScript(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                
                    
                        This action will send the "PUT" method with Headers containing "Content-Type : application/javascript".
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public void restPutScript(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPutScript.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restPutScript.parameters = null");
        table.add( TIDRestFunctions.restPutScript(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                
                    
                        This action will send the "PUT" method with Headers containing "Content-Type : text/plain".
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public ComponentFunction restPutText(String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restPutText.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restPutText.responseIdVar = null");
        return TIDRestFunctions.restPutText(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication);
    }

    /*********** <pre>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                
                    
                        This action will send the "PUT" method with Headers containing "Content-Type : text/plain".
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public void restPutText(StepTestTable table, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPutText.table = null");

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restPutText.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restPutText.responseIdVar = null");
        table.add( TIDRestFunctions.restPutText(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication));
    }

    /*********** <pre>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                
                    
                        This action will send the "PUT" method with Headers containing "Content-Type : text/plain".
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public ComponentFunction restPutText(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restPutText.parameters = null");
        return TIDRestFunctions.restPutText(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                
                    
                        This action will send the "PUT" method with Headers containing "Content-Type : text/plain".
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public void restPutText(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPutText.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restPutText.parameters = null");
        table.add( TIDRestFunctions.restPutText(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                
                    
                        This action will send the "PUT" method with Headers containing "Content-Type : text/xml".
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public ComponentFunction restPutXML(String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restPutXML.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restPutXML.responseIdVar = null");
        return TIDRestFunctions.restPutXML(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication);
    }

    /*********** <pre>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                
                    
                        This action will send the "PUT" method with Headers containing "Content-Type : text/xml".
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public void restPutXML(StepTestTable table, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPutXML.table = null");

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restPutXML.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restPutXML.responseIdVar = null");
        table.add( TIDRestFunctions.restPutXML(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication));
    }

    /*********** <pre>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                
                    
                        This action will send the "PUT" method with Headers containing "Content-Type : text/xml".
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public ComponentFunction restPutXML(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restPutXML.parameters = null");
        return TIDRestFunctions.restPutXML(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                
                    
                        This action will send the "PUT" method with Headers containing "Content-Type : text/xml".
                    
                    
                        If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
                        before executing this action, which will be handled within a session.
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public void restPutXML(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restPutXML.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restPutXML.parameters = null");
        table.add( TIDRestFunctions.restPutXML(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre>
                    Perform an HTTP method on a REST service.
                
                    If the test field SessionIDItem is provided, the keyword RestStartServiceSession SHOULD be executed 
                    before executing this action, which will be handled within a session.
                    Otherwise, it will be considered as a one-shot connection, 
                    and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param hTTPMethod  Optional:NOThe HTTP method to execute.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                           The name of the variable holding the ID (generated internally), which is used to
                           get the Response Object from the internal Map.
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public ComponentFunction restRequest(String hTTPMethod, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( hTTPMethod == null ) throw new IllegalArgumentException ( "restRequest.hTTPMethod = null");
        if ( relativeURI == null ) throw new IllegalArgumentException ( "restRequest.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restRequest.responseIdVar = null");
        return TIDRestFunctions.restRequest(getWindow().getName(), getName(), hTTPMethod, relativeURI, responseIdVar, body, headers, authentication);
    }

    /*********** <pre>
                    Perform an HTTP method on a REST service.
                
                    If the test field SessionIDItem is provided, the keyword RestStartServiceSession SHOULD be executed 
                    before executing this action, which will be handled within a session.
                    Otherwise, it will be considered as a one-shot connection, 
                    and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param hTTPMethod  Optional:NOThe HTTP method to execute.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                           The name of the variable holding the ID (generated internally), which is used to
                           get the Response Object from the internal Map.
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The custom headers to be included in this REST request.
                        
     @param authentication  Optional:YES
                           The custom authentication/authorization information.
                        
     **********/
    public void restRequest(StepTestTable table, String hTTPMethod, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restRequest.table = null");

        if ( hTTPMethod == null ) throw new IllegalArgumentException ( "restRequest.hTTPMethod = null");
        if ( relativeURI == null ) throw new IllegalArgumentException ( "restRequest.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restRequest.responseIdVar = null");
        table.add( TIDRestFunctions.restRequest(getWindow().getName(), getName(), hTTPMethod, relativeURI, responseIdVar, body, headers, authentication));
    }

    /*********** <pre>
                    Perform an HTTP method on a REST service.
                
                    If the test field SessionIDItem is provided, the keyword RestStartServiceSession SHOULD be executed 
                    before executing this action, which will be handled within a session.
                    Otherwise, it will be considered as a one-shot connection, 
                    and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         hTTPMethod -- Optional:NOThe HTTP method to execute.<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                           The name of the variable holding the ID (generated internally), which is used to
                           get the Response Object from the internal Map.
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public ComponentFunction restRequest(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restRequest.parameters = null");
        return TIDRestFunctions.restRequest(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
                    Perform an HTTP method on a REST service.
                
                    If the test field SessionIDItem is provided, the keyword RestStartServiceSession SHOULD be executed 
                    before executing this action, which will be handled within a session.
                    Otherwise, it will be considered as a one-shot connection, 
                    and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         hTTPMethod -- Optional:NOThe HTTP method to execute.<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                           The name of the variable holding the ID (generated internally), which is used to
                           get the Response Object from the internal Map.
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The custom headers to be included in this REST request.
                        <BR/>         authentication -- Optional:YES
                           The custom authentication/authorization information.
                        
    </UL>

     **********/
    public void restRequest(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restRequest.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restRequest.parameters = null");
        table.add( TIDRestFunctions.restRequest(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre>
                    Start a session for a REST service.
                
                    Currently the "base URL" and "authentication information" will be stored for the opened session.
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param baseURL  Optional:NOThe base URL to be stored with a session.
     @param authentication  Optional:YES
                           The file holding authentication information to be used during this session.
                        
     **********/
    public ComponentFunction restStartServiceSession(String baseURL, String authentication ) {

        if ( baseURL == null ) throw new IllegalArgumentException ( "restStartServiceSession.baseURL = null");
        return TIDRestFunctions.restStartServiceSession(getWindow().getName(), getName(), baseURL, authentication);
    }

    /*********** <pre>
                    Start a session for a REST service.
                
                    Currently the "base URL" and "authentication information" will be stored for the opened session.
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param baseURL  Optional:NOThe base URL to be stored with a session.
     @param authentication  Optional:YES
                           The file holding authentication information to be used during this session.
                        
     **********/
    public void restStartServiceSession(StepTestTable table, String baseURL, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restStartServiceSession.table = null");

        if ( baseURL == null ) throw new IllegalArgumentException ( "restStartServiceSession.baseURL = null");
        table.add( TIDRestFunctions.restStartServiceSession(getWindow().getName(), getName(), baseURL, authentication));
    }

    /*********** <pre>
                    Start a session for a REST service.
                
                    Currently the "base URL" and "authentication information" will be stored for the opened session.
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         baseURL -- Optional:NOThe base URL to be stored with a session.<BR/>         authentication -- Optional:YES
                           The file holding authentication information to be used during this session.
                        
    </UL>

     **********/
    public ComponentFunction restStartServiceSession(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restStartServiceSession.parameters = null");
        return TIDRestFunctions.restStartServiceSession(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
                    Start a session for a REST service.
                
                    Currently the "base URL" and "authentication information" will be stored for the opened session.
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         baseURL -- Optional:NOThe base URL to be stored with a session.<BR/>         authentication -- Optional:YES
                           The file holding authentication information to be used during this session.
                        
    </UL>

     **********/
    public void restStartServiceSession(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restStartServiceSession.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restStartServiceSession.parameters = null");
        table.add( TIDRestFunctions.restStartServiceSession(getWindow().getName(), getName(), parameters));
    }

}
