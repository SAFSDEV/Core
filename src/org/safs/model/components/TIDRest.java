
/******************************************************************************
 * TIDRest.java
 *
 * Copyright (c) by SAS Institute Inc., Cary, NC 27513
 * General Public License: http://www.opensource.org/licenses/gpl-license.php
 *
 * !!! DO NOT EDIT THIS FILE !!!
 * This file is automatically generated from XML source.  Any changes you make 
 * here will be erased the next time the file is generated.
 *
 * The following assets are needed to generate this file:
 *
 *   TIDRestFunctions.xml
 *   keyword_library.dtd
 *   XSLJavaCommonFunctions.xsl
 *   XSLJavaComponentModel.xsl
 *
 * Example invocation to generate:
 *
 *   msxsl.exe TIDRestFunctions.xml XSLJavaComponentModel.xsl -o TIDRest.java
 *
 ******************************************************************************/ 
package org.safs.model.components;

import org.safs.model.commands.TIDRestFunctions;
import org.safs.model.ComponentFunction;
import org.safs.model.components.UIComponent;
import org.safs.model.StepTestTable;

public class TIDRest extends UIComponent {

    /*****************
    Constructor 

    Create an instance of pseudo-component representing 
    a specific component in a specific window.
    
    @param window  Optional:NO 
           Specifies which Window this component is 'in'.
    @param compname Optional:NO 
           Specifies the AppMap name of the component in the Window.
    ****************/
    public TIDRest(Window window, String compname) {

        super(window, compname);
    }

    /*****************
    Constructor 

    Create an instance of pseudo-component representing 
    a specific component in a specific window.
    
    This convenience routine will create the requisite Window component.
    
    @param winname  Optional:NO 
           Specifies the AppMap name of the window.
    @param compname Optional:NO 
           Specifies the AppMap name of the component in the Window.
    ****************/
    public TIDRest(String winname, String compname) {

        this(new Window(winname), compname);
    }

    protected TIDRest(String compname) {

        super(compname);
    }



    /*********** <pre>
                    Stop a session for a REST service.
                
                    Stop a session for a REST service.
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     **********/
    public ComponentFunction restEndServiceSession( ) {

        return TIDRestFunctions.restEndServiceSession(getWindow().getName(), getName());
    }

    /*********** <pre>
                    Stop a session for a REST service.
                
                    Stop a session for a REST service.
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     **********/
    public void restEndServiceSession(StepTestTable table ) {

        if ( table == null ) throw new IllegalArgumentException ( "restEndServiceSession.table = null");

        table.add( TIDRestFunctions.restEndServiceSession(getWindow().getName(), getName()));
    }

    /*********** <pre>
					Perform the "GET" method on a REST service, and try to get back the binary content.
				
				    
				        This action will send the "GET" method with Headers containing "Accept : application/octet-stream".
				        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
				    
					
						If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
						before executing this action, which will be handled within a session.
						Otherwise, it will be considered as a one-shot connection, 
						and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
					
				    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                	       The name of the variable holding the ID (generated internally), which is used to
                	       get the Response Object from the internal Map.
                	    
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                	       The headers to be included in this REST request.
                	       Such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".
                	    
     @param authentication  Optional:YES
                           The authentication information to guarantee the one-shot connection successful.
                           It is ONLY useful for the situation without session; otherwise it is ignored.
                        
     **********/
    public ComponentFunction restGetBinary(String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restGetBinary.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restGetBinary.responseIdVar = null");
        return TIDRestFunctions.restGetBinary(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication);
    }

    /*********** <pre>
					Perform the "GET" method on a REST service, and try to get back the binary content.
				
				    
				        This action will send the "GET" method with Headers containing "Accept : application/octet-stream".
				        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
				    
					
						If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
						before executing this action, which will be handled within a session.
						Otherwise, it will be considered as a one-shot connection, 
						and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
					
				    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                	       The name of the variable holding the ID (generated internally), which is used to
                	       get the Response Object from the internal Map.
                	    
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                	       The headers to be included in this REST request.
                	       Such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".
                	    
     @param authentication  Optional:YES
                           The authentication information to guarantee the one-shot connection successful.
                           It is ONLY useful for the situation without session; otherwise it is ignored.
                        
     **********/
    public void restGetBinary(StepTestTable table, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restGetBinary.table = null");

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restGetBinary.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restGetBinary.responseIdVar = null");
        table.add( TIDRestFunctions.restGetBinary(getWindow().getName(), getName(), relativeURI, responseIdVar, body, headers, authentication));
    }

    /*********** <pre>
					Perform the "GET" method on a REST service, and try to get back the binary content.
				
				    
				        This action will send the "GET" method with Headers containing "Accept : application/octet-stream".
				        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
				    
					
						If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
						before executing this action, which will be handled within a session.
						Otherwise, it will be considered as a one-shot connection, 
						and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
					
				    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                	       The name of the variable holding the ID (generated internally), which is used to
                	       get the Response Object from the internal Map.
                	    <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                	       The headers to be included in this REST request.
                	       Such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".
                	    <BR/>         authentication -- Optional:YES
                           The authentication information to guarantee the one-shot connection successful.
                           It is ONLY useful for the situation without session; otherwise it is ignored.
                        
    </UL>

     **********/
    public ComponentFunction restGetBinary(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restGetBinary.parameters = null");
        return TIDRestFunctions.restGetBinary(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
					Perform the "GET" method on a REST service, and try to get back the binary content.
				
				    
				        This action will send the "GET" method with Headers containing "Accept : application/octet-stream".
				        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
				    
					
						If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
						before executing this action, which will be handled within a session.
						Otherwise, it will be considered as a one-shot connection, 
						and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
					
				    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                	       The name of the variable holding the ID (generated internally), which is used to
                	       get the Response Object from the internal Map.
                	    <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                	       The headers to be included in this REST request.
                	       Such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".
                	    <BR/>         authentication -- Optional:YES
                           The authentication information to guarantee the one-shot connection successful.
                           It is ONLY useful for the situation without session; otherwise it is ignored.
                        
    </UL>

     **********/
    public void restGetBinary(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restGetBinary.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restGetBinary.parameters = null");
        table.add( TIDRestFunctions.restGetBinary(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre>
                    Perform an HTTP method on a REST service.
                
                    If the test field SessionIDItem is provided, the keyword RestStartServiceSession SHOULD be executed 
                    before executing this action, which will be handled within a session.
                    Otherwise, it will be considered as a one-shot connection, 
                    and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param hTTPMethod  Optional:NOThe HTTP method to execute.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                           The name of the variable holding the ID (generated internally), which is used to
                           get the Response Object from the internal Map.
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The headers to be included in this REST request.
                           Such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".
                        
     @param authentication  Optional:YES
                           The authentication information to guarantee this one-shot connection successful.
                        
     **********/
    public ComponentFunction restRequest(String hTTPMethod, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( hTTPMethod == null ) throw new IllegalArgumentException ( "restRequest.hTTPMethod = null");
        if ( relativeURI == null ) throw new IllegalArgumentException ( "restRequest.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restRequest.responseIdVar = null");
        return TIDRestFunctions.restRequest(getWindow().getName(), getName(), hTTPMethod, relativeURI, responseIdVar, body, headers, authentication);
    }

    /*********** <pre>
                    Perform an HTTP method on a REST service.
                
                    If the test field SessionIDItem is provided, the keyword RestStartServiceSession SHOULD be executed 
                    before executing this action, which will be handled within a session.
                    Otherwise, it will be considered as a one-shot connection, 
                    and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param hTTPMethod  Optional:NOThe HTTP method to execute.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                           The name of the variable holding the ID (generated internally), which is used to
                           get the Response Object from the internal Map.
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The headers to be included in this REST request.
                           Such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".
                        
     @param authentication  Optional:YES
                           The authentication information to guarantee this one-shot connection successful.
                        
     **********/
    public void restRequest(StepTestTable table, String hTTPMethod, String relativeURI, String responseIdVar, String body, String headers, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restRequest.table = null");

        if ( hTTPMethod == null ) throw new IllegalArgumentException ( "restRequest.hTTPMethod = null");
        if ( relativeURI == null ) throw new IllegalArgumentException ( "restRequest.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restRequest.responseIdVar = null");
        table.add( TIDRestFunctions.restRequest(getWindow().getName(), getName(), hTTPMethod, relativeURI, responseIdVar, body, headers, authentication));
    }

    /*********** <pre>
                    Perform an HTTP method on a REST service.
                
                    If the test field SessionIDItem is provided, the keyword RestStartServiceSession SHOULD be executed 
                    before executing this action, which will be handled within a session.
                    Otherwise, it will be considered as a one-shot connection, 
                    and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         hTTPMethod -- Optional:NOThe HTTP method to execute.<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                           The name of the variable holding the ID (generated internally), which is used to
                           get the Response Object from the internal Map.
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The headers to be included in this REST request.
                           Such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".
                        <BR/>         authentication -- Optional:YES
                           The authentication information to guarantee this one-shot connection successful.
                        
    </UL>

     **********/
    public ComponentFunction restRequest(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restRequest.parameters = null");
        return TIDRestFunctions.restRequest(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
                    Perform an HTTP method on a REST service.
                
                    If the test field SessionIDItem is provided, the keyword RestStartServiceSession SHOULD be executed 
                    before executing this action, which will be handled within a session.
                    Otherwise, it will be considered as a one-shot connection, 
                    and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         hTTPMethod -- Optional:NOThe HTTP method to execute.<BR/>         relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>         responseIdVar -- Optional:NO
                           The name of the variable holding the ID (generated internally), which is used to
                           get the Response Object from the internal Map.
                        <BR/>         body -- Optional:YESThe body to send with this REST request.<BR/>         headers -- Optional:YES
                           The headers to be included in this REST request.
                           Such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".
                        <BR/>         authentication -- Optional:YES
                           The authentication information to guarantee this one-shot connection successful.
                        
    </UL>

     **********/
    public void restRequest(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restRequest.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restRequest.parameters = null");
        table.add( TIDRestFunctions.restRequest(getWindow().getName(), getName(), parameters));
    }

    /*********** <pre>
                    Start a session for a REST service.
                
                    Currently the "base URL" and "authentication information" will be stored for the opened session.
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param baseURL  Optional:NOThe base URL to be stored with a session.
     @param authentication  Optional:YES
                           The authentication information to be used during this session.
                        
     **********/
    public ComponentFunction restStartServiceSession(String baseURL, String authentication ) {

        if ( baseURL == null ) throw new IllegalArgumentException ( "restStartServiceSession.baseURL = null");
        return TIDRestFunctions.restStartServiceSession(getWindow().getName(), getName(), baseURL, authentication);
    }

    /*********** <pre>
                    Start a session for a REST service.
                
                    Currently the "base URL" and "authentication information" will be stored for the opened session.
                    </pre>    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param baseURL  Optional:NOThe base URL to be stored with a session.
     @param authentication  Optional:YES
                           The authentication information to be used during this session.
                        
     **********/
    public void restStartServiceSession(StepTestTable table, String baseURL, String authentication ) {

        if ( table == null ) throw new IllegalArgumentException ( "restStartServiceSession.table = null");

        if ( baseURL == null ) throw new IllegalArgumentException ( "restStartServiceSession.baseURL = null");
        table.add( TIDRestFunctions.restStartServiceSession(getWindow().getName(), getName(), baseURL, authentication));
    }

    /*********** <pre>
                    Start a session for a REST service.
                
                    Currently the "base URL" and "authentication information" will be stored for the opened session.
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         baseURL -- Optional:NOThe base URL to be stored with a session.<BR/>         authentication -- Optional:YES
                           The authentication information to be used during this session.
                        
    </UL>

     **********/
    public ComponentFunction restStartServiceSession(String[] parameters ) {

        if ( parameters == null ) throw new IllegalArgumentException ( "restStartServiceSession.parameters = null");
        return TIDRestFunctions.restStartServiceSession(getWindow().getName(), getName(), parameters);
    }

    /*********** <pre>
                    Start a session for a REST service.
                
                    Currently the "base URL" and "authentication information" will be stored for the opened session.
                    </pre>    
    Supporting Engines:
    <P/><UL>
    <LI>SAFS TIDComponent</LI>
    </UL>

     @param table  Optional:NO
            The table to add the record to.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>         baseURL -- Optional:NOThe base URL to be stored with a session.<BR/>         authentication -- Optional:YES
                           The authentication information to be used during this session.
                        
    </UL>

     **********/
    public void restStartServiceSession(StepTestTable table, String[] parameters ) {

        if ( table == null ) throw new IllegalArgumentException ( "restStartServiceSession.table = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restStartServiceSession.parameters = null");
        table.add( TIDRestFunctions.restStartServiceSession(getWindow().getName(), getName(), parameters));
    }

}
