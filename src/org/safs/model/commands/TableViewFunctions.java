
/******************************************************************************
 * TableViewFunctions.java
 *
 * Copyright (c) by SAS Institute Inc., Cary, NC 27513
 * General Public License: http://www.opensource.org/licenses/gpl-license.php
 *
 * !!! DO NOT EDIT THIS FILE !!!
 * This file is automatically generated from XML source.  Any changes you make 
 * here will be erased the next time the file is generated.
 *
 * The following assets are needed to generate this file:
 *
 *   TableViewFunctions.xml
 *   keyword_library.dtd
 *   XSLJavaCommonFunctions.xsl
 *   XSLJavaCommandModel.xsl
 *
 * Example invocation to generate:
 *
 *   msxsl.exe TableViewFunctions.xml XSLJavaCommandModel.xsl -o TableViewFunctions.java
 *
 ******************************************************************************/ 
package org.safs.model.commands;


import org.safs.model.ComponentFunction;


public class TableViewFunctions {

    /*****************
    Private Singleton Instance
    ****************/
    private static final TableViewFunctions singleton = new TableViewFunctions(); 

    /*****************
    Private Constructor
    Static class needing no instantiation.
    ****************/
    private TableViewFunctions() {}

    /*****************
    public Singleton to access class static methods via instance
    ****************/
    public static TableViewFunctions getInstance() { return singleton;}

    /** "ActivateTableRow" */
    static public final String ACTIVATETABLEROW_KEYWORD = "ActivateTableRow";
    /** "GetCellValue" */
    static public final String GETCELLVALUE_KEYWORD = "GetCellValue";
    /** "GetRowCount" */
    static public final String GETROWCOUNT_KEYWORD = "GetRowCount";
    /** "SetSelectedColumn" */
    static public final String SETSELECTEDCOLUMN_KEYWORD = "SetSelectedColumn";
    /** "SetSelectedRow" */
    static public final String SETSELECTEDROW_KEYWORD = "SetSelectedRow";
    /** "SetTableCellData" */
    static public final String SETTABLECELLDATA_KEYWORD = "SetTableCellData";
    /** "VerifyCellValue" */
    static public final String VERIFYCELLVALUE_KEYWORD = "VerifyCellValue";


    /*********** <pre> 
     		    Activate the specified row in the table.
     		  
     		    Activate the specified row in the table.
     		     </pre>    Supporting Engines:
    <P/><UL>
        <LI>Mercury Interactive WinRunner</LI>
    </UL>

     @param winname  Optional:NO
            The name of the window to act upon.
     @param compname  Optional:NO
            The name of the component to act upon.
     @param row  Optional:NO 
     	                 The row number to activate.
     	              
     **********/
    static public ComponentFunction activateTableRow (String winname, String compname, String row) {

        if ( winname == null ) throw new IllegalArgumentException ( "activateTableRow.winname = null");
        if ( compname == null ) throw new IllegalArgumentException ( "activateTableRow.compname = null");

        if ( row == null ) throw new IllegalArgumentException ( "activateTableRow.row = null");
        ComponentFunction cf = new ComponentFunction(ACTIVATETABLEROW_KEYWORD, winname, compname);
        cf.addParameter(row);
        return cf;
    }


    /*********** <pre> 
          		    Get the value of a cell at a certain row and column
          		  
          		    The variable in the parameter will be set to the value of the specified
          		    row and column.
          		     </pre>    Supporting Engines:
    <P/><UL>
        <LI>Mercury Interactive WinRunner</LI>
    </UL>

     @param winname  Optional:NO
            The name of the window to act upon.
     @param compname  Optional:NO
            The name of the component to act upon.
     @param variableName  Optional:NO 
				 The variable that the data will be stored in.
			      
     @param row  Optional:NO 
				 The row that the data will be extracted from
			      
     @param column  Optional:NO 
          	                 The column that the data will be extracted from.
          	              
     **********/
    static public ComponentFunction getCellValue (String winname, String compname, String variableName, String row, String column) {

        if ( winname == null ) throw new IllegalArgumentException ( "getCellValue.winname = null");
        if ( compname == null ) throw new IllegalArgumentException ( "getCellValue.compname = null");

        if ( column == null ) throw new IllegalArgumentException ( "getCellValue.column = null");
        if ( row == null ) throw new IllegalArgumentException ( "getCellValue.row = null");
        if ( variableName == null ) throw new IllegalArgumentException ( "getCellValue.variableName = null");
        ComponentFunction cf = new ComponentFunction(GETCELLVALUE_KEYWORD, winname, compname);
        cf.addParameter(variableName);
        cf.addParameter(row);
        cf.addParameter(column);
        return cf;
    }


    /*********** <pre> 
          		    Get the value of a cell at a certain row and column
          		  
          		    The variable in the parameter will be set to the value of the specified
          		    row and column.
          		     </pre>    
    Supporting Engines:
    <P/><UL>
        <LI>Mercury Interactive WinRunner</LI>
    </UL>

     @param winname  Optional:NO
            The name of the window to act upon.
     @param compname  Optional:NO
            The name of the component to act upon.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>        variableName -- Optional:NO 
				 The variable that the data will be stored in.
			      <BR/>        row -- Optional:NO 
				 The row that the data will be extracted from
			      <BR/>        column -- Optional:NO 
          	                 The column that the data will be extracted from.
          	              
    </UL>

     **********/
    static public ComponentFunction getCellValue(String winname, String compname, String[] parameters) {

        if ( winname == null ) throw new IllegalArgumentException ( "getCellValue.winname = null");
        if ( compname == null ) throw new IllegalArgumentException ( "getCellValue.compname = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "getCellValue.parameters = null");
        ComponentFunction cf = new ComponentFunction(GETCELLVALUE_KEYWORD, winname, compname);
        cf.addParameters(parameters);
        return cf;
    }


    /*********** <pre> 
               		    Get a count of how many rows are in the table
               		  
               		    The variable in the parameter will be set to the number of rows
               		    in the table.
               		     </pre>    Supporting Engines:
    <P/><UL>
        <LI>Mercury Interactive WinRunner</LI>
    </UL>

     @param winname  Optional:NO
            The name of the window to act upon.
     @param compname  Optional:NO
            The name of the component to act upon.
     @param rowCount  Optional:NO 
				 The variable that the number of rows will be stored in.
			      
     **********/
    static public ComponentFunction getRowCount (String winname, String compname, String rowCount) {

        if ( winname == null ) throw new IllegalArgumentException ( "getRowCount.winname = null");
        if ( compname == null ) throw new IllegalArgumentException ( "getRowCount.compname = null");

        if ( rowCount == null ) throw new IllegalArgumentException ( "getRowCount.rowCount = null");
        ComponentFunction cf = new ComponentFunction(GETROWCOUNT_KEYWORD, winname, compname);
        cf.addParameter(rowCount);
        return cf;
    }


    /*********** <pre> 
     		    Set the current column of to the one specified.
     		  
     		    In the tableview the current column will be set to the one specified
     		    in the command parameter.
     		     </pre>    Supporting Engines:
    <P/><UL>
        <LI>Mercury Interactive WinRunner</LI>
    </UL>

     @param winname  Optional:NO
            The name of the window to act upon.
     @param compname  Optional:NO
            The name of the component to act upon.
     @param column  Optional:NO 
     	                 The column number that the TableView should be set to.
     	              
     **********/
    static public ComponentFunction setSelectedColumn (String winname, String compname, String column) {

        if ( winname == null ) throw new IllegalArgumentException ( "setSelectedColumn.winname = null");
        if ( compname == null ) throw new IllegalArgumentException ( "setSelectedColumn.compname = null");

        if ( column == null ) throw new IllegalArgumentException ( "setSelectedColumn.column = null");
        ComponentFunction cf = new ComponentFunction(SETSELECTEDCOLUMN_KEYWORD, winname, compname);
        cf.addParameter(column);
        return cf;
    }


    /*********** <pre> 
		    Set the current row of to the one specified.
		  
		    In the tableview the current row will be set to the one specified
		    in the command parameter.
		     </pre>    Supporting Engines:
    <P/><UL>
        <LI>Mercury Interactive WinRunner</LI>
    </UL>

     @param winname  Optional:NO
            The name of the window to act upon.
     @param compname  Optional:NO
            The name of the component to act upon.
     @param row  Optional:NO 
	                 The row number that the TableView should be set to.
	              
     **********/
    static public ComponentFunction setSelectedRow (String winname, String compname, String row) {

        if ( winname == null ) throw new IllegalArgumentException ( "setSelectedRow.winname = null");
        if ( compname == null ) throw new IllegalArgumentException ( "setSelectedRow.compname = null");

        if ( row == null ) throw new IllegalArgumentException ( "setSelectedRow.row = null");
        ComponentFunction cf = new ComponentFunction(SETSELECTEDROW_KEYWORD, winname, compname);
        cf.addParameter(row);
        return cf;
    }


    /*********** <pre> 
          		    Set a specific cell to the specified value.
          		  
          		    Set the cell at the specified position in the table to a specific value.
          		    The user must make sure that the values indicated in the command are 
          		    valid as far as the row and column specification of the table.
          		     </pre>    Supporting Engines:
    <P/><UL>
        <LI>Mercury Interactive WinRunner</LI>
    </UL>

     @param winname  Optional:NO
            The name of the window to act upon.
     @param compname  Optional:NO
            The name of the component to act upon.
     @param row  Optional:NO 
          	                 The row that the cell you want to set is in.
          	              
     @param column  Optional:NO 
				 The column that the cell you want to set is in.
			      
     @param textValue  Optional:NO 
				 The text value to set the cell value to.
			      
     **********/
    static public ComponentFunction setTableCellData (String winname, String compname, String row, String column, String textValue) {

        if ( winname == null ) throw new IllegalArgumentException ( "setTableCellData.winname = null");
        if ( compname == null ) throw new IllegalArgumentException ( "setTableCellData.compname = null");

        if ( column == null ) throw new IllegalArgumentException ( "setTableCellData.column = null");
        if ( row == null ) throw new IllegalArgumentException ( "setTableCellData.row = null");
        if ( textValue == null ) throw new IllegalArgumentException ( "setTableCellData.textValue = null");
        ComponentFunction cf = new ComponentFunction(SETTABLECELLDATA_KEYWORD, winname, compname);
        cf.addParameter(row);
        cf.addParameter(column);
        cf.addParameter(textValue);
        return cf;
    }


    /*********** <pre> 
          		    Set a specific cell to the specified value.
          		  
          		    Set the cell at the specified position in the table to a specific value.
          		    The user must make sure that the values indicated in the command are 
          		    valid as far as the row and column specification of the table.
          		     </pre>    
    Supporting Engines:
    <P/><UL>
        <LI>Mercury Interactive WinRunner</LI>
    </UL>

     @param winname  Optional:NO
            The name of the window to act upon.
     @param compname  Optional:NO
            The name of the component to act upon.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>        row -- Optional:NO 
          	                 The row that the cell you want to set is in.
          	              <BR/>        column -- Optional:NO 
				 The column that the cell you want to set is in.
			      <BR/>        textValue -- Optional:NO 
				 The text value to set the cell value to.
			      
    </UL>

     **********/
    static public ComponentFunction setTableCellData(String winname, String compname, String[] parameters) {

        if ( winname == null ) throw new IllegalArgumentException ( "setTableCellData.winname = null");
        if ( compname == null ) throw new IllegalArgumentException ( "setTableCellData.compname = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "setTableCellData.parameters = null");
        ComponentFunction cf = new ComponentFunction(SETTABLECELLDATA_KEYWORD, winname, compname);
        cf.addParameters(parameters);
        return cf;
    }


    /*********** <pre> 
                    		    Verify the contents of a particular cell at position
                    		    row, column.
                    		  
                    		    The data is verified to equal the value of EXPECTED value
                    		    at the specified row and column.
                    		     </pre>    Supporting Engines:
    <P/><UL>
        <LI>Mercury Interactive WinRunner</LI>
    </UL>

     @param winname  Optional:NO
            The name of the window to act upon.
     @param compname  Optional:NO
            The name of the component to act upon.
     @param expectedText  Optional:NO 
     				 The value that the data in the cell is expected to equal.
     			      
     @param row  Optional:NO 
				 The row number of the cell to be verified.
			      
     @param column  Optional:NO 
				 The column number of the cell to be verified.
			      
     **********/
    static public ComponentFunction verifyCellValue (String winname, String compname, String expectedText, String row, String column) {

        if ( winname == null ) throw new IllegalArgumentException ( "verifyCellValue.winname = null");
        if ( compname == null ) throw new IllegalArgumentException ( "verifyCellValue.compname = null");

        if ( column == null ) throw new IllegalArgumentException ( "verifyCellValue.column = null");
        if ( expectedText == null ) throw new IllegalArgumentException ( "verifyCellValue.expectedText = null");
        if ( row == null ) throw new IllegalArgumentException ( "verifyCellValue.row = null");
        ComponentFunction cf = new ComponentFunction(VERIFYCELLVALUE_KEYWORD, winname, compname);
        cf.addParameter(expectedText);
        cf.addParameter(row);
        cf.addParameter(column);
        return cf;
    }


    /*********** <pre> 
                    		    Verify the contents of a particular cell at position
                    		    row, column.
                    		  
                    		    The data is verified to equal the value of EXPECTED value
                    		    at the specified row and column.
                    		     </pre>    
    Supporting Engines:
    <P/><UL>
        <LI>Mercury Interactive WinRunner</LI>
    </UL>

     @param winname  Optional:NO
            The name of the window to act upon.
     @param compname  Optional:NO
            The name of the component to act upon.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>        expectedText -- Optional:NO 
     				 The value that the data in the cell is expected to equal.
     			      <BR/>        row -- Optional:NO 
				 The row number of the cell to be verified.
			      <BR/>        column -- Optional:NO 
				 The column number of the cell to be verified.
			      
    </UL>

     **********/
    static public ComponentFunction verifyCellValue(String winname, String compname, String[] parameters) {

        if ( winname == null ) throw new IllegalArgumentException ( "verifyCellValue.winname = null");
        if ( compname == null ) throw new IllegalArgumentException ( "verifyCellValue.compname = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "verifyCellValue.parameters = null");
        ComponentFunction cf = new ComponentFunction(VERIFYCELLVALUE_KEYWORD, winname, compname);
        cf.addParameters(parameters);
        return cf;
    }


}
