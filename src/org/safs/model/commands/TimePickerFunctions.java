
/******************************************************************************
 * TimePickerFunctions.java
 *
 * Copyright (c) by SAS Institute Inc., Cary, NC 27513
 * General Public License: http://www.opensource.org/licenses/gpl-license.php
 *
 * !!! DO NOT EDIT THIS FILE !!!
 * This file is automatically generated from XML source.  Any changes you make 
 * here will be erased the next time the file is generated.
 *
 * The following assets are needed to generate this file:
 *
 *   TimePickerFunctions.xml
 *   keyword_library.dtd
 *   XSLJavaCommonFunctions.xsl
 *   XSLJavaCommandModel.xsl
 *
 * Example invocation to generate:
 *
 *   msxsl.exe TimePickerFunctions.xml XSLJavaCommandModel.xsl -o TimePickerFunctions.java
 *
 ******************************************************************************/ 
package org.safs.model.commands;


import org.safs.model.ComponentFunction;


public class TimePickerFunctions {

    /*****************
    Private Singleton Instance
    ****************/
    private static final TimePickerFunctions singleton = new TimePickerFunctions(); 

    /*****************
    Private Constructor
    Static class needing no instantiation.
    ****************/
    private TimePickerFunctions() {}

    /*****************
    public Singleton to access class static methods via instance
    ****************/
    public static TimePickerFunctions getInstance() { return singleton;}

    /** "GetTime" */
    static public final String GETTIME_KEYWORD = "GetTime";
    /** "SetTime" */
    static public final String SETTIME_KEYWORD = "SetTime";


    /*********** <pre> 
                 Action to get time from a time picker component and assign it to a variable.
                  </pre>    Supporting Engines:
    <P/><UL>
        <LI>Google Android</LI>
    </UL>

     @param winname  Optional:NO
            The name of the window to act upon.
     @param compname  Optional:NO
            The name of the component to act upon.
     @param variableName  Optional:NO 
                 The name of variable to contain the time string of TimePicker.
              
     **********/
    static public ComponentFunction getTime (String winname, String compname, String variableName) {

        if ( winname == null ) throw new IllegalArgumentException ( "getTime.winname = null");
        if ( compname == null ) throw new IllegalArgumentException ( "getTime.compname = null");

        if ( variableName == null ) throw new IllegalArgumentException ( "getTime.variableName = null");
        ComponentFunction cf = new ComponentFunction(GETTIME_KEYWORD, winname, compname);
        cf.addParameter(variableName);
        return cf;
    }


    /*********** <pre> 
                 Action to set time for a time picker component according to its TimeValue.
                  </pre>    Supporting Engines:
    <P/><UL>
        <LI>Google Android</LI>
    </UL>

     @param winname  Optional:NO
            The name of the window to act upon.
     @param compname  Optional:NO
            The name of the component to act upon.
     @param timeValue  Optional:NO 
                 TimeValue to set.
              
     **********/
    static public ComponentFunction setTime (String winname, String compname, String timeValue) {

        if ( winname == null ) throw new IllegalArgumentException ( "setTime.winname = null");
        if ( compname == null ) throw new IllegalArgumentException ( "setTime.compname = null");

        if ( timeValue == null ) throw new IllegalArgumentException ( "setTime.timeValue = null");
        ComponentFunction cf = new ComponentFunction(SETTIME_KEYWORD, winname, compname);
        cf.addParameter(timeValue);
        return cf;
    }


}
