
/******************************************************************************
 * TIDRestFunctions.java
 *
 * Copyright (c) by SAS Institute Inc., Cary, NC 27513
 * General Public License: http://www.opensource.org/licenses/gpl-license.php
 *
 * !!! DO NOT EDIT THIS FILE !!!
 * This file is automatically generated from XML source.  Any changes you make 
 * here will be erased the next time the file is generated.
 *
 * The following assets are needed to generate this file:
 *
 *   TIDRestFunctions.xml
 *   keyword_library.dtd
 *   XSLJavaCommonFunctions.xsl
 *   XSLJavaCommandModel.xsl
 *
 * Example invocation to generate:
 *
 *   msxsl.exe TIDRestFunctions.xml XSLJavaCommandModel.xsl -o TIDRestFunctions.java
 *
 ******************************************************************************/ 
package org.safs.model.commands;


import org.safs.model.ComponentFunction;


public class TIDRestFunctions {

    /*****************
    Private Singleton Instance
    ****************/
    private static final TIDRestFunctions singleton = new TIDRestFunctions(); 

    /*****************
    Private Constructor
    Static class needing no instantiation.
    ****************/
    private TIDRestFunctions() {}

    /*****************
    public Singleton to access class static methods via instance
    ****************/
    public static TIDRestFunctions getInstance() { return singleton;}

    /** "RestEndServiceSession" */
    static public final String RESTENDSERVICESESSION_KEYWORD = "RestEndServiceSession";
    /** "RestGetBinary" */
    static public final String RESTGETBINARY_KEYWORD = "RestGetBinary";
    /** "RestRequest" */
    static public final String RESTREQUEST_KEYWORD = "RestRequest";
    /** "RestStartServiceSession" */
    static public final String RESTSTARTSERVICESESSION_KEYWORD = "RestStartServiceSession";


    /*********** <pre>
                    Stop a session for a REST service.
                
                    Stop a session for a REST service.
                    </pre>    Supporting Engines:
    <P/><UL>
        <LI>SAFS TIDComponent</LI>
    </UL>

     @param winname  Optional:NO
            The name of the window to act upon.
     @param compname  Optional:NO
            The name of the component to act upon.
     **********/
    static public ComponentFunction restEndServiceSession (String winname, String compname) {

        if ( winname == null ) throw new IllegalArgumentException ( "restEndServiceSession.winname = null");
        if ( compname == null ) throw new IllegalArgumentException ( "restEndServiceSession.compname = null");

        ComponentFunction cf = new ComponentFunction(RESTENDSERVICESESSION_KEYWORD, winname, compname);
        return cf;
    }


    /*********** <pre>
					Perform the "GET" method on a REST service, and try to get back the binary content.
				
				    
				        This action will send the "GET" method with Headers containing "Accept : application/octet-stream".
				        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
				    
					
						If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
						before executing this action, which will be handled within a session.
						Otherwise, it will be considered as a one-shot connection, 
						and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
					
				    </pre>    Supporting Engines:
    <P/><UL>
        <LI>SAFS TIDComponent</LI>
    </UL>

     @param winname  Optional:NO
            The name of the window to act upon.
     @param compname  Optional:NO
            The name of the component to act upon.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                	       The name of the variable holding the ID (generated internally), which is used to
                	       get the Response Object from the internal Map.
                	    
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                	       The headers to be included in this REST request.
                	       Such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".
                	    
     @param authentication  Optional:YES
                           The authentication information to guarantee the one-shot connection successful.
                           It is ONLY useful for the situation without session; otherwise it is ignored.
                        
     **********/
    static public ComponentFunction restGetBinary (String winname, String compname, String relativeURI, String responseIdVar, String body, String headers, String authentication) {

        if ( winname == null ) throw new IllegalArgumentException ( "restGetBinary.winname = null");
        if ( compname == null ) throw new IllegalArgumentException ( "restGetBinary.compname = null");

        if ( relativeURI == null ) throw new IllegalArgumentException ( "restGetBinary.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restGetBinary.responseIdVar = null");
        ComponentFunction cf = new ComponentFunction(RESTGETBINARY_KEYWORD, winname, compname);
        cf.addParameter(relativeURI);
        cf.addParameter(responseIdVar);
        cf.addParameter(body);
        cf.addParameter(headers);
        cf.addParameter(authentication);
        return cf;
    }


    /*********** <pre>
					Perform the "GET" method on a REST service, and try to get back the binary content.
				
				    
				        This action will send the "GET" method with Headers containing "Accept : application/octet-stream".
				        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
				    
					
						If the field SessionIDItem is provided in the map, the keyword RestStartServiceSession SHOULD be executed 
						before executing this action, which will be handled within a session.
						Otherwise, it will be considered as a one-shot connection, 
						and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
					
				    </pre>    
    Supporting Engines:
    <P/><UL>
        <LI>SAFS TIDComponent</LI>
    </UL>

     @param winname  Optional:NO
            The name of the window to act upon.
     @param compname  Optional:NO
            The name of the component to act upon.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>        relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>        responseIdVar -- Optional:NO
                	       The name of the variable holding the ID (generated internally), which is used to
                	       get the Response Object from the internal Map.
                	    <BR/>        body -- Optional:YESThe body to send with this REST request.<BR/>        headers -- Optional:YES
                	       The headers to be included in this REST request.
                	       Such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".
                	    <BR/>        authentication -- Optional:YES
                           The authentication information to guarantee the one-shot connection successful.
                           It is ONLY useful for the situation without session; otherwise it is ignored.
                        
    </UL>

     **********/
    static public ComponentFunction restGetBinary(String winname, String compname, String[] parameters) {

        if ( winname == null ) throw new IllegalArgumentException ( "restGetBinary.winname = null");
        if ( compname == null ) throw new IllegalArgumentException ( "restGetBinary.compname = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restGetBinary.parameters = null");
        ComponentFunction cf = new ComponentFunction(RESTGETBINARY_KEYWORD, winname, compname);
        cf.addParameters(parameters);
        return cf;
    }


    /*********** <pre>
                    Perform an HTTP method on a REST service.
                
                    If the test field SessionIDItem is provided, the keyword RestStartServiceSession SHOULD be executed 
                    before executing this action, which will be handled within a session.
                    Otherwise, it will be considered as a one-shot connection, 
                    and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    </pre>    Supporting Engines:
    <P/><UL>
        <LI>SAFS TIDComponent</LI>
    </UL>

     @param winname  Optional:NO
            The name of the window to act upon.
     @param compname  Optional:NO
            The name of the component to act upon.
     @param hTTPMethod  Optional:NOThe HTTP method to execute.
     @param relativeURI  Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.
     @param responseIdVar  Optional:NO
                           The name of the variable holding the ID (generated internally), which is used to
                           get the Response Object from the internal Map.
                        
     @param body  Optional:YESThe body to send with this REST request.
     @param headers  Optional:YES
                           The headers to be included in this REST request.
                           Such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".
                        
     @param authentication  Optional:YES
                           The authentication information to guarantee this one-shot connection successful.
                        
     **********/
    static public ComponentFunction restRequest (String winname, String compname, String hTTPMethod, String relativeURI, String responseIdVar, String body, String headers, String authentication) {

        if ( winname == null ) throw new IllegalArgumentException ( "restRequest.winname = null");
        if ( compname == null ) throw new IllegalArgumentException ( "restRequest.compname = null");

        if ( hTTPMethod == null ) throw new IllegalArgumentException ( "restRequest.hTTPMethod = null");
        if ( relativeURI == null ) throw new IllegalArgumentException ( "restRequest.relativeURI = null");
        if ( responseIdVar == null ) throw new IllegalArgumentException ( "restRequest.responseIdVar = null");
        ComponentFunction cf = new ComponentFunction(RESTREQUEST_KEYWORD, winname, compname);
        cf.addParameter(hTTPMethod);
        cf.addParameter(relativeURI);
        cf.addParameter(responseIdVar);
        cf.addParameter(body);
        cf.addParameter(headers);
        cf.addParameter(authentication);
        return cf;
    }


    /*********** <pre>
                    Perform an HTTP method on a REST service.
                
                    If the test field SessionIDItem is provided, the keyword RestStartServiceSession SHOULD be executed 
                    before executing this action, which will be handled within a session.
                    Otherwise, it will be considered as a one-shot connection, 
                    and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
                    </pre>    
    Supporting Engines:
    <P/><UL>
        <LI>SAFS TIDComponent</LI>
    </UL>

     @param winname  Optional:NO
            The name of the window to act upon.
     @param compname  Optional:NO
            The name of the component to act upon.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>        hTTPMethod -- Optional:NOThe HTTP method to execute.<BR/>        relativeURI -- Optional:NOThe relative URI combined with a base-URL (stored in a session) to form a REST service URL.<BR/>        responseIdVar -- Optional:NO
                           The name of the variable holding the ID (generated internally), which is used to
                           get the Response Object from the internal Map.
                        <BR/>        body -- Optional:YESThe body to send with this REST request.<BR/>        headers -- Optional:YES
                           The headers to be included in this REST request.
                           Such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".
                        <BR/>        authentication -- Optional:YES
                           The authentication information to guarantee this one-shot connection successful.
                        
    </UL>

     **********/
    static public ComponentFunction restRequest(String winname, String compname, String[] parameters) {

        if ( winname == null ) throw new IllegalArgumentException ( "restRequest.winname = null");
        if ( compname == null ) throw new IllegalArgumentException ( "restRequest.compname = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restRequest.parameters = null");
        ComponentFunction cf = new ComponentFunction(RESTREQUEST_KEYWORD, winname, compname);
        cf.addParameters(parameters);
        return cf;
    }


    /*********** <pre>
                    Start a session for a REST service.
                
                    Currently the "base URL" and "authentication information" will be stored for the opened session.
                    </pre>    Supporting Engines:
    <P/><UL>
        <LI>SAFS TIDComponent</LI>
    </UL>

     @param winname  Optional:NO
            The name of the window to act upon.
     @param compname  Optional:NO
            The name of the component to act upon.
     @param baseURL  Optional:NOThe base URL to be stored with a session.
     @param authentication  Optional:YES
                           The authentication information to be used during this session.
                        
     **********/
    static public ComponentFunction restStartServiceSession (String winname, String compname, String baseURL, String authentication) {

        if ( winname == null ) throw new IllegalArgumentException ( "restStartServiceSession.winname = null");
        if ( compname == null ) throw new IllegalArgumentException ( "restStartServiceSession.compname = null");

        if ( baseURL == null ) throw new IllegalArgumentException ( "restStartServiceSession.baseURL = null");
        ComponentFunction cf = new ComponentFunction(RESTSTARTSERVICESESSION_KEYWORD, winname, compname);
        cf.addParameter(baseURL);
        cf.addParameter(authentication);
        return cf;
    }


    /*********** <pre>
                    Start a session for a REST service.
                
                    Currently the "base URL" and "authentication information" will be stored for the opened session.
                    </pre>    
    Supporting Engines:
    <P/><UL>
        <LI>SAFS TIDComponent</LI>
    </UL>

     @param winname  Optional:NO
            The name of the window to act upon.
     @param compname  Optional:NO
            The name of the component to act upon.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>        baseURL -- Optional:NOThe base URL to be stored with a session.<BR/>        authentication -- Optional:YES
                           The authentication information to be used during this session.
                        
    </UL>

     **********/
    static public ComponentFunction restStartServiceSession(String winname, String compname, String[] parameters) {

        if ( winname == null ) throw new IllegalArgumentException ( "restStartServiceSession.winname = null");
        if ( compname == null ) throw new IllegalArgumentException ( "restStartServiceSession.compname = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "restStartServiceSession.parameters = null");
        ComponentFunction cf = new ComponentFunction(RESTSTARTSERVICESESSION_KEYWORD, winname, compname);
        cf.addParameters(parameters);
        return cf;
    }


}
