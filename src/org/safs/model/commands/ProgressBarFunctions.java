
/******************************************************************************
 * ProgressBarFunctions.java
 *
 * Copyright (C) SAS Institute, All rights reserved.
 * General Public License: https://www.gnu.org/licenses/gpl-3.0.en.html
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see http://www.gnu.org/licenses/.
 *
 * !!! DO NOT EDIT THIS FILE !!!
 * This file is automatically generated from XML source.  Any changes you make 
 * here will be erased the next time the file is generated.
 *
 * The following assets are needed to generate this file:
 *
 *   ProgressBarFunctions.xml
 *   keyword_library.dtd
 *   XSLJavaCommonFunctions.xsl
 *   XSLJavaCommandModel.xsl
 *
 * Example invocation to generate:
 *
 *   msxsl.exe ProgressBarFunctions.xml XSLJavaCommandModel.xsl -o ProgressBarFunctions.java
 *
 ******************************************************************************/ 
package org.safs.model.commands;


import org.safs.model.ComponentFunction;


public class ProgressBarFunctions {

    /*****************
    Private Singleton Instance
    ****************/
    private static final ProgressBarFunctions singleton = new ProgressBarFunctions(); 

    /*****************
    Private Constructor
    Static class needing no instantiation.
    ****************/
    private ProgressBarFunctions() {}

    /*****************
    public Singleton to access class static methods via instance
    ****************/
    public static ProgressBarFunctions getInstance() { return singleton;}

    /** "GetProgress" */
    static public final String GETPROGRESS_KEYWORD = "GetProgress";
    /** "GetRating" */
    static public final String GETRATING_KEYWORD = "GetRating";
    /** "SetProgress" */
    static public final String SETPROGRESS_KEYWORD = "SetProgress";
    /** "SetRating" */
    static public final String SETRATING_KEYWORD = "SetRating";


    /*********** <pre> 
                 Action to get progress of a progress bar component.
                  </pre>    Supporting Engines:
    <P/><UL>
        <LI>Google Android</LI>
    </UL>

     @param winname  Optional:NO
            The name of the window to act upon.
     @param compname  Optional:NO
            The name of the component to act upon.
     @param variableName  Optional:NO 
                 The variable VariableName will contain the progress of progress bar in percentage.
              
     @param isPrimary  Optional:YES 
                 IsPrimary is boolean value (default is true). It indicates which indicator to get.
              
     **********/
    static public ComponentFunction getProgress (String winname, String compname, String variableName, String isPrimary) {

        if ( winname == null ) throw new IllegalArgumentException ( "getProgress.winname = null");
        if ( compname == null ) throw new IllegalArgumentException ( "getProgress.compname = null");

        if ( variableName == null ) throw new IllegalArgumentException ( "getProgress.variableName = null");
        ComponentFunction cf = new ComponentFunction(GETPROGRESS_KEYWORD, winname, compname);
        cf.addParameter(variableName);
        cf.addParameter(isPrimary);
        return cf;
    }


    /*********** <pre> 
                 Action to get progress of a progress bar component.
                  </pre>    
    Supporting Engines:
    <P/><UL>
        <LI>Google Android</LI>
    </UL>

     @param winname  Optional:NO
            The name of the window to act upon.
     @param compname  Optional:NO
            The name of the component to act upon.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>        variableName -- Optional:NO 
                 The variable VariableName will contain the progress of progress bar in percentage.
              <BR/>        isPrimary -- Optional:YES 
                 IsPrimary is boolean value (default is true). It indicates which indicator to get.
              
    </UL>

     **********/
    static public ComponentFunction getProgress(String winname, String compname, String[] parameters) {

        if ( winname == null ) throw new IllegalArgumentException ( "getProgress.winname = null");
        if ( compname == null ) throw new IllegalArgumentException ( "getProgress.compname = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "getProgress.parameters = null");
        ComponentFunction cf = new ComponentFunction(GETPROGRESS_KEYWORD, winname, compname);
        cf.addParameters(parameters);
        return cf;
    }


    /*********** <pre> 
                 Action to get rating of a rating bar component.
                 Note:  Work ONLY for android.widget.RatingBar object.
                  </pre>    Supporting Engines:
    <P/><UL>
        <LI>Google Android</LI>
    </UL>

     @param winname  Optional:NO
            The name of the window to act upon.
     @param compname  Optional:NO
            The name of the component to act upon.
     @param variableName  Optional:NO 
                 The variable VariableName will contain the rating of rating bar.
              
     **********/
    static public ComponentFunction getRating (String winname, String compname, String variableName) {

        if ( winname == null ) throw new IllegalArgumentException ( "getRating.winname = null");
        if ( compname == null ) throw new IllegalArgumentException ( "getRating.compname = null");

        if ( variableName == null ) throw new IllegalArgumentException ( "getRating.variableName = null");
        ComponentFunction cf = new ComponentFunction(GETRATING_KEYWORD, winname, compname);
        cf.addParameter(variableName);
        return cf;
    }


    /*********** <pre> 
                 Action to set progress for a progress bar component according to its value.
                  </pre>    Supporting Engines:
    <P/><UL>
        <LI>Google Android</LI>
    </UL>

     @param winname  Optional:NO
            The name of the window to act upon.
     @param compname  Optional:NO
            The name of the component to act upon.
     @param progressValue  Optional:NO 
                 ProgressValue to set.
              
     @param isPrimary  Optional:YES 
                 IsPrimary is boolean value (default is true). It indicates which indicator to set.
              
     **********/
    static public ComponentFunction setProgress (String winname, String compname, String progressValue, String isPrimary) {

        if ( winname == null ) throw new IllegalArgumentException ( "setProgress.winname = null");
        if ( compname == null ) throw new IllegalArgumentException ( "setProgress.compname = null");

        if ( progressValue == null ) throw new IllegalArgumentException ( "setProgress.progressValue = null");
        ComponentFunction cf = new ComponentFunction(SETPROGRESS_KEYWORD, winname, compname);
        cf.addParameter(progressValue);
        cf.addParameter(isPrimary);
        return cf;
    }


    /*********** <pre> 
                 Action to set progress for a progress bar component according to its value.
                  </pre>    
    Supporting Engines:
    <P/><UL>
        <LI>Google Android</LI>
    </UL>

     @param winname  Optional:NO
            The name of the window to act upon.
     @param compname  Optional:NO
            The name of the component to act upon.
     @param parameters  Optional:NO
            An array containing the following parameters:
    <UL>
<BR/>        progressValue -- Optional:NO 
                 ProgressValue to set.
              <BR/>        isPrimary -- Optional:YES 
                 IsPrimary is boolean value (default is true). It indicates which indicator to set.
              
    </UL>

     **********/
    static public ComponentFunction setProgress(String winname, String compname, String[] parameters) {

        if ( winname == null ) throw new IllegalArgumentException ( "setProgress.winname = null");
        if ( compname == null ) throw new IllegalArgumentException ( "setProgress.compname = null");
        if ( parameters == null ) throw new IllegalArgumentException ( "setProgress.parameters = null");
        ComponentFunction cf = new ComponentFunction(SETPROGRESS_KEYWORD, winname, compname);
        cf.addParameters(parameters);
        return cf;
    }


    /*********** <pre> 
                 Action to set rating for a rating bar component according to its value.
                 Note:  Work ONLY for android.widget.RatingBar object.
                  </pre>    Supporting Engines:
    <P/><UL>
        <LI>Google Android</LI>
    </UL>

     @param winname  Optional:NO
            The name of the window to act upon.
     @param compname  Optional:NO
            The name of the component to act upon.
     @param ratingValue  Optional:NO 
                 RatingValue to set.
              
     **********/
    static public ComponentFunction setRating (String winname, String compname, String ratingValue) {

        if ( winname == null ) throw new IllegalArgumentException ( "setRating.winname = null");
        if ( compname == null ) throw new IllegalArgumentException ( "setRating.compname = null");

        if ( ratingValue == null ) throw new IllegalArgumentException ( "setRating.ratingValue = null");
        ComponentFunction cf = new ComponentFunction(SETRATING_KEYWORD, winname, compname);
        cf.addParameter(ratingValue);
        return cf;
    }


}
